{"version":3,"sources":["assets/samples/footsteps.wav","assets/samples/fireworks.wav","assets/samples/windandchimes.wav","assets/samples/bonecrack.wav","components/Home.js","components/instruments/Wrapper.js","mqtt.js","store/reducers/band.js","components/instruments/Juno.js","components/instruments/Rhodes.js","components/instruments/Sampler.js","store/reducers/system.js","components/UserList.js","store/reducers/chat.js","store/reducers/rootReducer.js","store/index.js","components/Chat.js","components/InstrumentChooser.js","components/Room.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Container","styled","div","Intro","section","RoomChooser","Door","useState","length","result","characters","charactersLength","i","charAt","Math","floor","random","generateId","room","setRoom","history","useHistory","TextField","value","onChange","event","target","Button","onClick","Tone","context","state","resume","push","active","User","type","user","children","name","useSelector","system","inst","band","instruments","Grid","item","xs","sm","client","mqtt","connect","types","JUNO","RHODES","defaultState","note","velocity","triggerAttack","instrument","payload","triggerRelease","Input","scale","prefix","patched","setPatched","setInstrument","mouseDown","setMouseDown","isActiveUser","useEffect","pad","Synth","oscillator","envelope","attack","decay","sustain","release","reverb","Freeverb","pingPongDelay","PingPongDelay","delayTime","feedback","wet","Master","Wrapper","onMouseDown","x","clientX","getBoundingClientRect","left","offsetWidth","y","clientY","top","offsetHeight","n","publish","JSON","stringify","onMouseMove","onMouseUp","frequency","harmonicity","modulationIndex","resonance","octaves","users","setName","ul","map","index","key","messages","appReducer","combineReducers","action","includes","newState","Object","keys","forEach","chat","unshift","message","splice","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","undefined","applyMiddleware","dispatch","History","text","setText","fullWidth","sender","addMessage","choosenInstrument","container","FormControl","InputLabel","Select","setUser","MenuItem","id","useParams","requestedName","setRequestedName","useDispatch","subscribe","err","console","log","on","topic","parse","toString","e","data","options","clientId","getState","onKeyPress","UserList","Chat","InstrumentChooser","spacing","Juno","Rhodes","App","path","Room","Home","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.124e00a3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/footsteps.3497fc94.wav\";","module.exports = __webpack_public_path__ + \"static/media/fireworks.23af77c2.wav\";","module.exports = __webpack_public_path__ + \"static/media/windandchimes.4a6e1b51.wav\";","module.exports = __webpack_public_path__ + \"static/media/bonecrack.c37d9ccf.wav\";","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Tone from \"tone\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  max-width: 768px;\n  margin: auto;\n  margin-top: 100px;\n`;\nconst Intro = styled.section``;\nconst RoomChooser = styled.section`\n  p {\n    margin-top: 24px;\n    margin-bottom: 24px;\n  }\n`;\nconst Door = styled.div`\n  margin-top: 92px;\n  text-align: center;\n`;\nconst generateId = (length) => {\n  var result = \"\";\n  var characters = \"abcdefghijklmnopqrstuvwxyz0123456789\";\n  var charactersLength = characters.length;\n  for (var i = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n};\nexport default () => {\n  const [room, setRoom] = useState(generateId(4));\n  const history = useHistory();\n  return (\n    <Container>\n      <Intro>\n        Welcome to vjam,<br></br>a virtual jam session for everyone.\n      </Intro>\n      <RoomChooser>\n        <p>\n          Please enter a valid room id provided by your jam session partners.\n          You can also open a new one by using any random id, which is hopefully\n          not yet taken - good luck.\n        </p>\n        <Door>\n          <TextField\n            value={room}\n            onChange={(event) => setRoom(event.target.value)}\n          ></TextField>\n          <Button\n            onClick={() => {\n              if (Tone.context.state !== \"running\") {\n                Tone.context.resume();\n              }\n              history.push(`rooms/${room}`);\n            }}\n          >\n            enter\n          </Button>\n        </Door>\n      </RoomChooser>\n    </Container>\n  );\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { useSelector } from \"react-redux\";\n\nconst Container = styled.div`\n  height: 200px;\n  width: 100%;\n  ${({ active }) =>\n    active &&\n    `\n    border: solid darkgreen 3px;\n  `}\n`;\nconst User = styled.div`\n  width: 100%;\n  background-color: lightyellow;\n`;\nexport default ({ type, user, children }) => {\n  const name = useSelector((state) => state.system.name);\n  const instruments = useSelector((state) => state.band.instruments);\n  const inst = instruments[type];\n  return (\n    <Grid item xs={12} sm={3}>\n      <User>\n        {type}: {user}\n      </User>\n      <Container active={name == inst.user}>{children}</Container>\n    </Grid>\n  );\n};\n","import mqtt from \"mqtt\";\n// const client = mqtt.connect(\"ws://localhost:9001\");\nconst client = mqtt.connect(\"wss://try:try@broker.shiftr.io\");\nexport default client;\n","const types = {\n  TRIGGERATTACK: \"TRIGGERATTACK\",\n  TRIGGERRELEASE: \"TRIGGERRELEASE\",\n  SETUSER: \"SETUSER\",\n};\nconst instruments = {\n  JUNO: \"JUNO\",\n  RHODES: \"RHODES\",\n};\n\nconst defaultState = {\n  instruments: {\n    JUNO: { user: \"\", note: null, velocity: 0 },\n    RHODES: { user: \"\", note: null, velocity: 0 },\n  },\n};\n\nexport default (state = defaultState, action) => {\n  switch (action.type) {\n    case types.TRIGGERATTACK: {\n      let newState = { ...state };\n      newState.instruments[action.payload.instrument].note =\n        action.payload.note;\n      newState.instruments[action.payload.instrument].velocity =\n        action.payload.velocity;\n      return { ...newState };\n    }\n    case types.TRIGGERRELEASE: {\n      let newState = { ...state };\n      newState.instruments[action.payload.instrument].note = null;\n      newState.instruments[action.payload.instrument].velocity = 0;\n      return { ...newState };\n    }\n    case types.SETUSER: {\n      let newState = { ...state };\n      Object.keys(newState.instruments).forEach((key) => {\n        if (newState.instruments[key].user === action.payload.user) {\n          newState.instruments[key].user = \"\";\n        }\n      });\n      if (action.payload.instrument !== \"NONE\") {\n        newState.instruments[action.payload.instrument].user =\n          action.payload.user;\n      }\n\n      return { ...newState };\n    }\n    default:\n      return state;\n  }\n};\n\nexport const getChoosenInstrument = (user) => {\n  return (state) => {\n    let instrument = \"NONE\";\n    Object.keys(state.band.instruments).forEach((key) => {\n      if (state.band.instruments[key].user === user) {\n        instrument = key;\n      }\n    });\n    return instrument;\n  };\n};\nexport const triggerAttack = (instrument, note, velocity) => {\n  return {\n    type: types.TRIGGERATTACK,\n    payload: {\n      instrument,\n      note,\n      velocity,\n    },\n  };\n};\nexport const triggerRelease = (instrument) => {\n  return {\n    type: types.TRIGGERRELEASE,\n    payload: {\n      instrument,\n    },\n  };\n};\nexport const setUser = (instrument, user) => {\n  return {\n    type: types.SETUSER,\n    payload: {\n      instrument,\n      user,\n    },\n  };\n};\nexport { types, instruments };\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Synth, Freeverb, PingPongDelay, PolySynth, Master } from \"tone\";\nimport Wrapper from \"./Wrapper\";\nimport client from \"../../mqtt\";\n\nimport {\n  instruments,\n  triggerAttack,\n  triggerRelease,\n} from \"../../store/reducers/band\";\n\nimport styled from \"styled-components\";\n\nconst Input = styled.div`\n  width: 100%;\n  height: 100%;\n  background-color: lightskyblue;\n`;\n\nfunction map_range(value, low1, high1, low2, high2) {\n  return low2 + ((high2 - low2) * (value - low1)) / (high1 - low1);\n}\n\nconst scale = [\n  \"C3\",\n  \"D3\",\n  \"E3\",\n  \"F3\",\n  \"G3\",\n  \"A3\",\n  \"B3\",\n  \"C4\",\n  \"D4\",\n  \"E4\",\n  \"F4\",\n  \"G4\",\n  \"A4\",\n  \"B4\",\n];\n\nexport default ({ prefix }) => {\n  const [patched, setPatched] = useState(false);\n  const [instrument, setInstrument] = useState(null);\n  const [mouseDown, setMouseDown] = useState(false);\n  const note = useSelector((state) => state.band.instruments.JUNO.note);\n  const velocity = useSelector((state) => state.band.instruments.JUNO.velocity);\n  const user = useSelector((state) => state.band.instruments.JUNO.user);\n  const name = useSelector((state) => state.system.name);\n\n  const isActiveUser = () => {\n    return user === name;\n  };\n\n  useEffect(() => {\n    if (!patched) {\n      const pad = new Synth({\n        oscillator: {\n          type: \"sine\",\n        },\n        envelope: {\n          attack: 0.05,\n          decay: 0.1,\n          sustain: 0.3,\n          release: 1,\n        },\n      });\n      const reverb = new Freeverb(0.4, 1000);\n      const pingPongDelay = new PingPongDelay({\n        delayTime: \"8n\",\n        feedback: 0.4,\n        wet: 0.5,\n      });\n      pad.connect(Master);\n      pingPongDelay.connect(reverb);\n      reverb.connect(Master);\n      setInstrument(pad);\n      setPatched(true);\n    }\n    if (instrument) {\n      if (note) {\n        instrument.triggerAttack(note, 0, velocity);\n      } else {\n        instrument.triggerRelease();\n      }\n    }\n  });\n\n  return (\n    <Wrapper type={\"JUNO\"} user={user}>\n      <Input\n        onMouseDown={(event) => {\n          if (!isActiveUser()) return;\n          setMouseDown(true);\n          const x =\n            (event.clientX - event.target.getBoundingClientRect().left) /\n            event.target.offsetWidth;\n          const y =\n            1 -\n            (event.clientY - event.target.getBoundingClientRect().top) /\n              event.target.offsetHeight;\n\n          const n = scale[Math.floor(x * scale.length)];\n          client.publish(\n            prefix,\n            JSON.stringify(triggerAttack(instruments.JUNO, n, y / 2 + 0.5))\n          );\n        }}\n        onMouseMove={(event) => {\n          if (!isActiveUser()) return;\n          if (mouseDown) {\n            const x =\n              (event.clientX - event.target.getBoundingClientRect().left) /\n              event.target.offsetWidth;\n            const y =\n              1 -\n              (event.clientY - event.target.getBoundingClientRect().top) /\n                event.target.offsetHeight;\n            client.publish(\n              prefix,\n              JSON.stringify(\n                triggerAttack(\n                  instruments.JUNO,\n                  scale[Math.floor(x * scale.length)],\n                  y / 2 + 0.5\n                )\n              )\n            );\n          }\n        }}\n        onMouseUp={(event) => {\n          if (!isActiveUser()) return;\n          setMouseDown(false);\n          client.publish(\n            prefix,\n            JSON.stringify(triggerRelease(instruments.JUNO))\n          );\n        }}\n      ></Input>\n    </Wrapper>\n  );\n};\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Synth, Freeverb, PingPongDelay, MetalSynth, Master } from \"tone\";\nimport Wrapper from \"./Wrapper\";\nimport client from \"../../mqtt\";\n\nimport {\n  instruments,\n  triggerAttack,\n  triggerRelease,\n} from \"../../store/reducers/band\";\n\nimport styled from \"styled-components\";\n\nconst Input = styled.div`\n  width: 100%;\n  height: 100%;\n  background-color: lightgreen;\n`;\n\nfunction map_range(value, low1, high1, low2, high2) {\n  return low2 + ((high2 - low2) * (value - low1)) / (high1 - low1);\n}\n\nconst scale = [\n  \"C3\",\n  \"D3\",\n  \"E3\",\n  \"F3\",\n  \"G3\",\n  \"A3\",\n  \"B3\",\n  \"C4\",\n  \"D4\",\n  \"E4\",\n  \"F4\",\n  \"G4\",\n  \"A4\",\n  \"B4\",\n];\n\nexport default ({ prefix }) => {\n  const [patched, setPatched] = useState(false);\n  const [instrument, setInstrument] = useState(null);\n  const [mouseDown, setMouseDown] = useState(false);\n  const note = useSelector((state) => state.band.instruments.RHODES.note);\n  const velocity = useSelector(\n    (state) => state.band.instruments.RHODES.velocity\n  );\n  const user = useSelector((state) => state.band.instruments.RHODES.user);\n  const name = useSelector((state) => state.system.name);\n  const isActiveUser = () => {\n    return user === name;\n  };\n\n  useEffect(() => {\n    if (!patched) {\n      const inst = new Synth({\n        frequency: 200,\n        envelope: {\n          attack: 0.001,\n          decay: 1.4,\n          release: 0.2,\n        },\n        harmonicity: 5.1,\n        modulationIndex: 32,\n        resonance: 4000,\n        octaves: 1.5,\n      });\n      const reverb = new Freeverb(0.4, 1000);\n      const pingPongDelay = new PingPongDelay({\n        delayTime: \"8n\",\n        feedback: 0.4,\n        wet: 0.5,\n      });\n      inst.connect(Master);\n      pingPongDelay.connect(reverb);\n      reverb.connect(Master);\n      setInstrument(inst);\n      setPatched(true);\n    }\n    if (instrument) {\n      if (note) {\n        instrument.triggerAttack(note, 0, velocity);\n      } else {\n        instrument.triggerRelease();\n      }\n    }\n  });\n\n  return (\n    <Wrapper type={\"RHODES\"} user={user}>\n      <Input\n        onMouseDown={(event) => {\n          if (!isActiveUser()) return;\n          setMouseDown(true);\n          const x =\n            (event.clientX - event.target.getBoundingClientRect().left) /\n            event.target.offsetWidth;\n          const y =\n            1 -\n            (event.clientY - event.target.getBoundingClientRect().top) /\n              event.target.offsetHeight;\n\n          const n = scale[Math.floor(x * scale.length)];\n          client.publish(\n            prefix,\n            JSON.stringify(triggerAttack(instruments.RHODES, n, y / 2 + 0.5))\n          );\n        }}\n        onMouseMove={(event) => {\n          if (!isActiveUser()) return;\n          if (mouseDown) {\n            const x =\n              (event.clientX - event.target.getBoundingClientRect().left) /\n              event.target.offsetWidth;\n            const y =\n              1 -\n              (event.clientY - event.target.getBoundingClientRect().top) /\n                event.target.offsetHeight;\n            client.publish(\n              prefix,\n              JSON.stringify(\n                triggerAttack(\n                  instruments.RHODES,\n                  scale[Math.floor(x * scale.length)],\n                  y / 2 + 0.5\n                )\n              )\n            );\n          }\n        }}\n        onMouseUp={(event) => {\n          if (!isActiveUser()) return;\n          setMouseDown(false);\n          client.publish(\n            prefix,\n            JSON.stringify(triggerRelease(instruments.RHODES))\n          );\n        }}\n      ></Input>\n    </Wrapper>\n  );\n};\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { Synth, Sampler, Reverb, PingPongDelay, Master } from \"tone\";\nimport Wrapper from \"./Wrapper\";\n\nimport { triggerAttack, triggerRelease } from \"../../store/reducers/band\";\n\nimport client from \"../../mqtt\";\n\nimport footsteps from \"../../assets/samples/footsteps.wav\";\nimport fireworks from \"../../assets/samples/fireworks.wav\";\nimport wind from \"../../assets/samples/windandchimes.wav\";\nimport bonecrack from \"../../assets/samples/bonecrack.wav\";\n\nconst Input = styled.div`\n  width: 100%;\n  height: 100%;\n  background-color: red;\n`;\n\nfunction map_range(value, low1, high1, low2, high2) {\n  return low2 + ((high2 - low2) * (value - low1)) / (high1 - low1);\n}\n\nconst scale = [\"C3\", \"D3\", \"E3\", \"F3\"];\n\nexport default () => {\n  const [mounted, setMounted] = useState(false);\n  const [mouseDown, setMouseDown] = useState(false);\n  const synthRef = useRef(null);\n  const band = useSelector((state) => state.band);\n  const note = band.padNote;\n  const velocity = band.padVelocity;\n\n  const sampler = new Sampler(\n    {\n      C3: bonecrack,\n      D3: wind,\n      E3: fireworks,\n      F3: footsteps,\n    },\n    {\n      onload: () => {\n        sampler.triggerAttack(\"C3\");\n      },\n    }\n  );\n\n  const reverb = new Reverb({ decay: 4 });\n\n  useEffect(() => {\n    if (!mounted) {\n      sampler.connect(reverb);\n      synthRef.current = sampler;\n      reverb.connect(Master);\n      setMounted(true);\n    }\n    if (note) {\n      // synthRef.current.triggerAttack(note, 0, velocity);\n    } else {\n      // synthRef.current.triggerRelease();\n    }\n  });\n\n  return (\n    <Wrapper>\n      <Input\n        // ref={synthRef}\n        onMouseDown={(event) => {\n          synthRef.current.triggerAttack(\"C3\");\n          // setMouseDown(true);\n          const x =\n            (event.clientX - event.target.getBoundingClientRect().left) /\n            event.target.offsetWidth;\n          const y =\n            1 -\n            (event.clientY - event.target.getBoundingClientRect().top) /\n              event.target.offsetHeight;\n          console.log(y);\n          // client.publish(\n          //   \"redux\",\n          //   JSON.stringify(\n          //     triggerAttack(scale[Math.floor(x * scale.length)], y)\n          //   )\n          // );\n        }}\n        onMouseMove={(event) => {\n          if (mouseDown) {\n            const x =\n              (event.clientX - event.target.getBoundingClientRect().left) /\n              event.target.offsetWidth;\n            const y =\n              1 -\n              (event.clientY - event.target.getBoundingClientRect().top) /\n                event.target.offsetHeight;\n            client.publish(\n              \"redux\",\n              JSON.stringify(\n                triggerAttack(scale[Math.floor(x * scale.length)], y)\n              )\n            );\n          }\n          // synthRef.current.triggerAttack(note);\n          // console.log(\"mouseDown\", synthA);\n        }}\n        onMouseUp={(event) => {\n          setMouseDown(false);\n          client.publish(\"redux\", JSON.stringify(triggerRelease()));\n        }}\n      ></Input>\n    </Wrapper>\n  );\n};\n","const types = {\n  ADDUSER: \"ADDUSER\",\n  SETUSERS: \"SETUSERS\",\n  SETNAME: \"SETNAME\",\n};\n\nconst defaultState = {\n  name: \"\", //current user name\n  users: [], //all users\n};\n\nexport default (state = defaultState, action) => {\n  switch (action.type) {\n    case types.SETUSERS: {\n      return {\n        ...state,\n        users: action.payload.value,\n      };\n    }\n    case types.ADDUSER: {\n      let users = [...state.users];\n      if (!users.includes(action.payload.value)) {\n        users.push(action.payload.value);\n      }\n      return {\n        ...state,\n        users,\n      };\n    }\n    case types.SETNAME: {\n      if (!state.users.includes(action.payload.value)) {\n        return {\n          ...state,\n          name: action.payload.value,\n        };\n      }\n    }\n    default:\n      return state;\n  }\n};\n\nexport const setUsers = (value) => {\n  return {\n    type: types.SETUSERS,\n    payload: {\n      value,\n    },\n  };\n};\nexport const addUser = (value) => {\n  return {\n    type: types.ADDUSER,\n    payload: {\n      value,\n    },\n  };\n};\nexport const setName = (value) => {\n  return {\n    type: types.SETNAME,\n    payload: {\n      value,\n    },\n  };\n};\nexport { types };\n","import React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\n\nconst Container = styled.ul`\n  background-color: lightpink;\n  padding: 25px;\n  list-style-type: none;\n  li {\n    display: inline-block;\n    margin-right: 15px;\n  }\n`;\nexport default () => {\n  const users = useSelector((state) => state.system.users);\n  const name = useSelector((state) => state.system.name);\n\n  return (\n    <Container>\n      {users.map((user, index) => {\n        return (\n          <li key={index}>\n            {user !== name && <span>{user}</span>}\n            {user === name && <b>{user}</b>}\n          </li>\n        );\n      })}\n    </Container>\n  );\n};\n","const types = {\n  ADDMESSAGE: \"ADDMESSAGE\",\n};\n\nconst defaultState = {\n  messages: [],\n};\n\nexport default (state = defaultState, action) => {\n  switch (action.type) {\n    case types.ADDMESSAGE: {\n      let messages = [...state.messages];\n      messages.unshift(action.payload.message);\n      messages = messages.splice(0, 100);\n      return {\n        ...state,\n        messages,\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport const addMessage = (sender, text) => {\n  return {\n    type: types.ADDMESSAGE,\n    payload: {\n      message: {\n        sender,\n        text,\n      },\n    },\n  };\n};\nexport { types };\n","import { combineReducers } from \"redux\";\n\nimport system from \"./system\";\nimport band from \"./band\";\nimport chat from \"./chat\";\n\nconst appReducer = combineReducers({\n  system,\n  band,\n  chat,\n});\n\nexport default (state, action) => {\n  if (action.type === \"RESET\") {\n    return appReducer(undefined, action);\n  } else if (action.type === \"SETSTATE\") {\n    return appReducer(action.payload, {\n      type: \"IGNORE\",\n    });\n  } else {\n    return appReducer(state, action);\n  }\n};\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport { createEpicMiddleware } from \"redux-observable\";\n\nimport rootReducer from \"./reducers/rootReducer\";\n// import rootEpic from './epics/rootEpic'\n\n// const epicMiddleware = createEpicMiddleware()\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancer(\n    applyMiddleware()\n    // epicMiddleware\n  )\n);\n\n// epicMiddleware.run(rootEpic);\n// store.subscribe(() => console.log(store.getState()))\nstore.dispatch({\n  type: \"INIT\"\n});\n\nexport default store;\n","import React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport styled from \"styled-components\";\nimport client from \"../mqtt\";\n\nimport { addMessage } from \"../store/reducers/chat\";\nimport store from \"../store\";\n\nconst Container = styled.div`\n  background-color: lightcoral;\n  padding: 25px;\n`;\nconst History = styled.ul`\n  height: 100px;\n  overflow-y: scroll;\n`;\nconst Intro = styled.section``;\nexport default ({ prefix }) => {\n  const [text, setText] = useState(\"\");\n  const messages = useSelector((state) => state.chat.messages);\n  const name = useSelector((state) => state.system.name);\n\n  return (\n    <Container>\n      <TextField\n        fullWidth\n        value={text}\n        fullWidth\n        placeholder={\"something nice you wanna say to your friends\"}\n        onChange={(event) => setText(event.target.value)}\n        onKeyPress={(event) => {\n          if (event.key === \"Enter\") {\n            client.publish(prefix, JSON.stringify(addMessage(name, text)));\n            setText(\"\");\n          }\n        }}\n      ></TextField>\n      {/* <Button\n        onClick={() => {\n          client.publish(\n            prefix,\n            JSON.stringify(addMessage(\"TODO: name\", text))\n          );\n        }}\n      >\n        send\n      </Button> */}\n      <History>\n        {messages.map((message, index) => {\n          return (\n            <li key={index}>\n              {message.sender} > {message.text}\n            </li>\n          );\n        })}\n      </History>\n    </Container>\n  );\n};\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Grid from \"@material-ui/core/Grid\";\n\nimport client from \"../mqtt\";\nimport { setUser, getChoosenInstrument } from \"../store/reducers/band\";\n\nimport { instruments as types } from \"../store/reducers/band\";\n\nconst Container = styled.div`\n  width: 100%;\n  margin-top: 25px;\n  margin-bottom: 25px;\n`;\n\nexport default ({ prefix }) => {\n  const name = useSelector((state) => state.system.name);\n  const instruments = useSelector((state) => state.band.instruments);\n  const choosenInstrument = useSelector(getChoosenInstrument(name));\n  return (\n    <Container>\n      <Grid container>\n        <Grid item xs={4}>\n          <FormControl fullWidth>\n            <InputLabel>Pick an instrument</InputLabel>\n            <Select\n              value={choosenInstrument}\n              onChange={(event) => {\n                let taken = false;\n                Object.keys(instruments).forEach((key) => {\n                  if (instruments[key].user !== \"\") {\n                    taken = true;\n                  }\n                });\n                // if (event.target.value !== \"NONE\") {\n                client.publish(\n                  prefix,\n                  JSON.stringify(setUser(event.target.value, name))\n                );\n                // }\n              }}\n              fullWidth\n            >\n              <MenuItem value={\"NONE\"}>none</MenuItem>;\n              {Object.keys(types).map((key, index) => {\n                return (\n                  <MenuItem value={types[key]} key={index}>\n                    {types[key]}\n                  </MenuItem>\n                );\n              })}\n            </Select>\n          </FormControl>\n        </Grid>\n      </Grid>\n    </Container>\n  );\n};\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport Juno from \"./instruments/Juno\";\nimport Rhodes from \"./instruments/Rhodes\";\nimport Sampler from \"./instruments/Sampler\";\n\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\n\nimport { setUsers, addUser, setName } from \"../store/reducers/system\";\n\nimport UserList from \"./UserList\";\nimport Chat from \"./Chat\";\nimport InstrumentChooser from \"./InstrumentChooser\";\n\nimport store from \"../store\";\nimport client from \"../mqtt\";\nimport { types } from \"../store/reducers/chat\";\n\nconst Intro = styled.div`\n  margin-top: 128px;\n`;\nexport default () => {\n  const { id } = useParams();\n  const [patched, setPatched] = useState(false);\n  const [requestedName, setRequestedName] = useState(\"\");\n  const name = useSelector((state) => state.system.name);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (id && !patched) {\n      client.subscribe(`vjam/${id}`, function (err) {\n        if (!err) {\n          console.log(\"subscribed\");\n        }\n      });\n      client.subscribe(`vjam/${id}/users/#`, function (err) {\n        if (!err) {\n          console.log(`subscribed to vjam/${id}/users/#`);\n        }\n      });\n\n      client.on(\"message\", function (topic, message) {\n        if (topic === `vjam/${id}`) {\n          let action;\n          try {\n            action = JSON.parse(message.toString());\n            store.dispatch(action);\n          } catch (e) {}\n        }\n        if (topic === `vjam/${id}/users/get`) {\n          const data = JSON.parse(message.toString());\n          console.log(\"get users from\", data);\n          if (data.id !== client.options.clientId) {\n            client.publish(\n              `vjam/${id}/users/set`,\n              JSON.stringify(store.getState().system.users)\n            );\n          }\n        }\n        if (topic === `vjam/${id}/users/set`) {\n          console.log(\"set users\");\n          const data = JSON.parse(message.toString());\n          store.dispatch(setUsers(data));\n        }\n      });\n\n      setPatched(true);\n      client.publish(\n        `vjam/${id}/users/get`,\n        JSON.stringify({ id: client.options.clientId })\n      );\n    }\n  });\n  return (\n    <>\n      {name === \"\" && (\n        <Intro>\n          <Grid container>\n            <Grid item xs={2} sm={3}></Grid>\n            <Grid item xs={8} sm={6}>\n              Please let the others know your name. If it is not yet taken, then\n              you will automatically enter the jam session. Submit by pressing\n              return. There will be a button later, do not worry.\n            </Grid>\n            <Grid item xs={2} sm={3}></Grid>\n\n            <Grid item xs={2} sm={3}></Grid>\n            <Grid item xs={8} sm={6}>\n              <TextField\n                fullWidth\n                value={requestedName}\n                onChange={(event) => {\n                  setRequestedName(event.target.value);\n                }}\n                onKeyPress={(event) => {\n                  if (event.key === \"Enter\") {\n                    client.publish(\n                      `vjam/${id}`,\n                      JSON.stringify(addUser(requestedName))\n                    );\n                    console.log(\"setname action\", setName(requestedName));\n                    dispatch(setName(requestedName));\n                  }\n                }}\n              ></TextField>\n            </Grid>\n          </Grid>\n        </Intro>\n      )}\n\n      {name !== \"\" && (\n        <>\n          <Grid container>\n            <Grid item xs={12}>\n              <UserList></UserList>\n            </Grid>\n            <Grid item xs={12}>\n              <Chat prefix={`vjam/${id}`}></Chat>\n            </Grid>\n          </Grid>\n\n          <h2>Instruments</h2>\n          <p>\n            Instrumentes are controlled via the 2d pad, where the x axis is\n            mapped to the pitch and the y axis to the velocity. More instruments\n            and controllable effect parameters, as well as better interactions,\n            will hopefully follow soon.\n          </p>\n          <InstrumentChooser prefix={`vjam/${id}`}></InstrumentChooser>\n          <Grid container spacing={3}>\n            <Juno prefix={`vjam/${id}`}></Juno>\n            <Rhodes prefix={`vjam/${id}`}></Rhodes>\n            {/* <Sampler prefix={`vjam/${id}`}></Sampler> */}\n          </Grid>\n        </>\n      )}\n    </>\n  );\n};\n","import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport { HashRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport Home from \"./components/Home\";\nimport Room from \"./components/Room\";\n\nimport store from \"./store\";\n\nconst Container = styled.div`\n  margin-left: 15px;\n  margin-right: 15px;\n`;\n\nfunction App() {\n  return (\n    <Container>\n      <Provider store={store}>\n        <Router>\n          <Switch>\n            <Route path=\"/rooms/:id\">\n              <Room />\n            </Route>\n            <Route path=\"/\">\n              <Home />\n            </Route>\n          </Switch>\n        </Router>\n      </Provider>\n    </Container>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}