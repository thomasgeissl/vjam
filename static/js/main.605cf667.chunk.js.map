{"version":3,"sources":["assets/samples/bird.wav","assets/samples/waterbird.wav","assets/samples/bonecrack.wav","assets/samples/footsteps.wav","assets/samples/windandchimes.wav","assets/samples/toolfalling.wav","assets/samples/cat.wav","assets/samples/fireworks.wav","assets/samples/Roland-GR-1-Steel-Drum-C4.wav","components/Home.js","mqtt.js","store/reducers/band.js","components/2DPad.js","components/instruments/Wrapper.js","components/instruments/Juno.js","components/instruments/Rhodes.js","components/Triggers.js","components/instruments/MPC.js","components/instruments/Sampler.js","store/reducers/system.js","components/UserList.js","store/reducers/chat.js","components/Chat.js","components/InstrumentChooser.js","store/reducers/rootReducer.js","store/index.js","store/epics/rootEpic.js","components/Room.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","version","Container","styled","div","Version","Intro","section","RoomChooser","Door","useState","length","result","characters","charactersLength","i","charAt","Math","floor","random","generateId","room","setRoom","history","useHistory","TextField","value","onChange","event","target","Button","onClick","Tone","context","state","resume","push","client","mqtt","connect","types","instruments","JUNO","RHODES","MPC","STEELDRUM","defaultState","user","note","velocity","getNote","type","band","getVelocity","getUser","triggerAttack","instrument","payload","getActiveUsers","users","Object","keys","forEach","key","scale","active","prefix","getPosition","touches","touch","srcElement","x","clientX","getBoundingClientRect","left","offsetWidth","y","clientY","top","offsetHeight","myRef","useRef","bind","useGesture","onDrag","preventDefault","pos","n","publish","JSON","stringify","onDragStart","onDragEnd","domTarget","eventOptions","passive","useEffect","current","ref","User","children","inputPad","name","useSelector","system","inst","Box","clone","order","Grid","item","xs","sm","includes","setInstrument","pad","Synth","oscillator","envelope","attack","decay","sustain","release","reverb","Freeverb","pingPongDelay","PingPongDelay","delayTime","feedback","wet","Master","undefined","triggerRelease","Wrapper","FMSynth","harmonicity","modulationIndex","detune","sine","modulation","modulationEnvelope","tremolo","Tremolo","vibrato","Vibrato","start","TriggerWrapper","Trigger","clickHandler","triggers","container","spacing","map","trigger","index","pitch","Sampler","C2","F2","C3","F3","C4","F4","C5","F5","volume","triggerAttackRelease","Triggers","samples","heartBeats","Map","ul","setInterval","messages","History","Name","span","text","setText","chat","fullWidth","placeholder","onKeyPress","sender","message","addMessage","choosenInstrument","FormControl","InputLabel","Select","setUser","MenuItem","appReducer","combineReducers","action","set","Date","now","delete","indexOf","splice","newState","unshift","epicMiddleware","createEpicMiddleware","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","run","action$","pipe","filter","switchMap","interval","takeUntil","ofType","dispatch","celloSamples","steeldrum_C4","id","useParams","requestedName","setRequestedName","useDispatch","subscribe","err","console","log","on","topic","parse","toString","e","options","clientId","getState","data","setName","UserList","Chat","InstrumentChooser","justify","Juno","Rhodes","App","path","Room","Home","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.605cf667.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bird.71112820.wav\";","module.exports = __webpack_public_path__ + \"static/media/waterbird.6bb42376.wav\";","module.exports = __webpack_public_path__ + \"static/media/bonecrack.c37d9ccf.wav\";","module.exports = __webpack_public_path__ + \"static/media/footsteps.3497fc94.wav\";","module.exports = __webpack_public_path__ + \"static/media/windandchimes.4a6e1b51.wav\";","module.exports = __webpack_public_path__ + \"static/media/toolfalling.394aa099.wav\";","module.exports = __webpack_public_path__ + \"static/media/cat.ce192f93.wav\";","module.exports = __webpack_public_path__ + \"static/media/fireworks.23af77c2.wav\";","module.exports = __webpack_public_path__ + \"static/media/Roland-GR-1-Steel-Drum-C4.777ed87c.wav\";","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Tone from \"tone\";\nimport styled from \"styled-components\";\n\nimport pc from \"../../package.json\";\nconst version = pc.version;\n\nconst Container = styled.div`\n  max-width: 768px;\n  margin: auto;\n  margin-top: 100px;\n`;\nconst Version = styled.div`\n  position: fixed;\n  padding: 25px;\n  top: 0;\n  right: 0%;\n`;\nconst Intro = styled.section``;\nconst RoomChooser = styled.section`\n  p {\n    margin-top: 24px;\n    margin-bottom: 24px;\n  }\n`;\nconst Door = styled.div`\n  margin-top: 92px;\n  text-align: center;\n`;\nconst generateId = (length) => {\n  var result = \"\";\n  var characters = \"abcdefghijklmnopqrstuvwxyz0123456789\";\n  var charactersLength = characters.length;\n  for (var i = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n};\nexport default () => {\n  const [room, setRoom] = useState(generateId(4));\n  const history = useHistory();\n  return (\n    <Container>\n      <Version>{version}</Version>\n      <Intro>\n        Welcome to vjam,<br></br>a virtual jam session for everyone.\n      </Intro>\n      <RoomChooser>\n        <p>\n          Please enter a valid room id provided by your jam session partners.\n          You can also open a new one by using any random id, which is hopefully\n          not yet taken - good luck.\n        </p>\n        <Door>\n          <TextField\n            value={room}\n            onChange={(event) => setRoom(event.target.value)}\n          ></TextField>\n          <Button\n            onClick={() => {\n              if (Tone.context.state !== \"running\") {\n                Tone.context.resume();\n              }\n              history.push(`rooms/${room}`);\n            }}\n          >\n            enter\n          </Button>\n        </Door>\n      </RoomChooser>\n    </Container>\n  );\n};\n","import mqtt from \"mqtt\";\n// const client = mqtt.connect(\"ws://localhost:9001\");\n// const client = mqtt.connect(\"wss://try:try@broker.shiftr.io\");\nconst client = mqtt.connect(\"wss://public:public@public.cloud.shiftr.io\");\nexport default client;\n","const types = {\n  TRIGGERATTACK: \"TRIGGERATTACK\",\n  TRIGGERRELEASE: \"TRIGGERRELEASE\",\n  SETUSER: \"SETUSER\",\n};\nconst instruments = {\n  JUNO: \"JUNO\",\n  RHODES: \"RHODES\",\n  MPC: \"MPC\",\n  STEELDRUM: \"STEELDRUM\",\n};\n\nconst defaultState = {\n  instruments: {\n    JUNO: { user: \"\", note: null, velocity: 0 },\n    RHODES: { user: \"\", note: null, velocity: 0 },\n    MPC: { user: \"\", note: null, velocity: 0 },\n    STEELDRUM: { user: \"\", note: null, velocity: 0 },\n  },\n};\n\nexport default (state = defaultState, action) => {\n  switch (action.type) {\n    case types.TRIGGERATTACK: {\n      let newState = { ...state };\n      newState.instruments[action.payload.instrument].note =\n        action.payload.note;\n      newState.instruments[action.payload.instrument].velocity =\n        action.payload.velocity;\n      return { ...newState };\n    }\n    case types.TRIGGERRELEASE: {\n      let newState = { ...state };\n      newState.instruments[action.payload.instrument].note = null;\n      newState.instruments[action.payload.instrument].velocity = 0;\n      return { ...newState };\n    }\n    case types.SETUSER: {\n      let newState = { ...state };\n      Object.keys(newState.instruments).forEach((key) => {\n        if (newState.instruments[key].user === action.payload.user) {\n          newState.instruments[key].user = \"\";\n        }\n      });\n      if (action.payload.instrument !== \"NONE\") {\n        newState.instruments[action.payload.instrument].user =\n          action.payload.user;\n      }\n\n      return { ...newState };\n    }\n    default:\n      return state;\n  }\n};\n\nexport const getChoosenInstrument = (user) => {\n  return (state) => {\n    let instrument = \"NONE\";\n    Object.keys(state.band.instruments).forEach((key) => {\n      if (state.band.instruments[key].user === user) {\n        instrument = key;\n      }\n    });\n    return instrument;\n  };\n};\nexport const getNote = (type) => {\n  return (state) => {\n    return state.band.instruments[type].note;\n  };\n};\nexport const getVelocity = (type) => {\n  return (state) => {\n    return state.band.instruments[type].velocity;\n  };\n};\nexport const getUser = (type) => {\n  return (state) => {\n    return state.band.instruments[type].user;\n  };\n};\nexport const triggerAttack = (instrument, note, velocity) => {\n  return {\n    type: types.TRIGGERATTACK,\n    payload: {\n      instrument,\n      note,\n      velocity,\n    },\n  };\n};\nexport const triggerRelease = (instrument) => {\n  return {\n    type: types.TRIGGERRELEASE,\n    payload: {\n      instrument,\n    },\n  };\n};\nexport const setUser = (instrument, user) => {\n  return {\n    type: types.SETUSER,\n    payload: {\n      instrument,\n      user,\n    },\n  };\n};\nexport const getActiveUsers = (state) => {\n  let users = [];\n  Object.keys(state.band.instruments).forEach((key) => {\n    users.push(state.band.instruments[key].user);\n  });\n  return users;\n};\nexport { types, instruments };\n","import React, { useEffect, useRef } from \"react\";\nimport { useGesture } from \"react-use-gesture\";\nimport styled from \"styled-components\";\nimport client from \"../mqtt\";\nimport { triggerAttack, triggerRelease } from \"../store/reducers/band\";\n\nconst Container = styled.div`\n  width: 100%;\n  height: 100%;\n  background-color: lightskyblue;\n`;\n\nconst scale = [\n  \"C3\",\n  \"D3\",\n  \"E3\",\n  \"F3\",\n  \"G3\",\n  \"A3\",\n  \"B3\",\n  \"C4\",\n  \"D4\",\n  \"E4\",\n  \"F4\",\n  \"G4\",\n  \"A4\",\n  \"B4\",\n];\n\nexport default ({ active, type, prefix }) => {\n  const getPosition = ({ event }) => {\n    if (event.touches) {\n      const touch = event.touches[0];\n      const target = event.srcElement;\n      if (touch && target) {\n        const x =\n          (touch.clientX - target.getBoundingClientRect().left) /\n          target.offsetWidth;\n        const y =\n          1 -\n          (touch.clientY - target.getBoundingClientRect().top) /\n            target.offsetHeight;\n        return { x, y };\n      }\n    } else {\n      const target = event.srcElement;\n      if (target) {\n        const x =\n          (event.clientX - target.getBoundingClientRect().left) /\n          target.offsetWidth;\n        const y =\n          1 -\n          (event.clientY - target.getBoundingClientRect().top) /\n            target.offsetHeight;\n        return { x, y };\n      }\n    }\n  };\n  const myRef = useRef(null);\n  const bind = useGesture(\n    {\n      onDrag: (state) => {\n        if (!active) return;\n        state.event.preventDefault();\n        const pos = getPosition(state);\n        if (pos) {\n          const n = scale[Math.floor(pos.x * scale.length)];\n          client.publish(prefix, JSON.stringify(triggerAttack(type, n, pos.y)));\n        }\n      },\n      onDragStart: (state) => {\n        if (!active) return;\n        state.event.preventDefault();\n        const pos = getPosition(state);\n        if (pos) {\n          const n = scale[Math.floor(pos.x * scale.length)];\n          client.publish(prefix, JSON.stringify(triggerAttack(type, n, pos.y)));\n        }\n      },\n      onDragEnd: (state) => {\n        if (!active) return;\n        state.event.preventDefault();\n        client.publish(prefix, JSON.stringify(triggerRelease(type)));\n      },\n    },\n    {\n      domTarget: myRef,\n      eventOptions: { passive: false },\n    }\n  );\n  useEffect(bind, [bind]);\n  if (myRef.current) {\n    // console.log(myRef.current.offsetWidth);\n  }\n\n  return <Container ref={myRef}></Container>;\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Box from \"@material-ui/core/Box\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { useSelector } from \"react-redux\";\nimport InputPad from \"../2DPad\";\n\nconst Container = styled.div`\n  height: 200px;\n  width: 100%;\n  ${({ active }) =>\n    active &&\n    `\n    border: solid darkgreen 3px;\n  `}\n`;\nconst User = styled.div`\n  width: 100%;\n  background-color: lightyellow;\n`;\nexport default ({ type, user, children, inputPad, prefix }) => {\n  const name = useSelector((state) => state.system.name);\n  const users = useSelector((state) => state.system.users);\n  const instruments = useSelector((state) => state.band.instruments);\n  const inst = instruments[type];\n  return (\n    <Box clone order={inst.user === name ? 1 : type.length}>\n      <Grid item xs={12} sm={3}>\n        <User>\n          {type}: {users.includes(user) ? user : \"\"}\n        </User>\n        <Container active={name === inst.user}>\n          {inputPad && (\n            <InputPad\n              type={type}\n              active={user === name}\n              prefix={prefix}\n            ></InputPad>\n          )}\n          {children}\n        </Container>\n      </Grid>\n    </Box>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Synth, Freeverb, PingPongDelay, Master } from \"tone\";\nimport Wrapper from \"./Wrapper\";\nimport { getNote, getVelocity, getUser } from \"../../store/reducers/band\";\n\nexport default ({ type, prefix }) => {\n  const [instrument, setInstrument] = useState(null);\n  const note = useSelector(getNote(type));\n  const velocity = useSelector(getVelocity(type));\n  const user = useSelector(getUser(type));\n\n  useEffect(() => {\n    const pad = new Synth({\n      oscillator: {\n        type: \"sine\",\n      },\n      envelope: {\n        attack: 0.05,\n        decay: 0.1,\n        sustain: 0.3,\n        release: 1,\n      },\n    });\n    const reverb = new Freeverb(0.4, 1000);\n    const pingPongDelay = new PingPongDelay({\n      delayTime: \"8n\",\n      feedback: 0.4,\n      wet: 0.5,\n    });\n    pad.connect(Master);\n    pingPongDelay.connect(reverb);\n    reverb.connect(Master);\n    setInstrument(pad);\n  }, []);\n\n  useEffect(() => {\n    if (instrument) {\n      if (note) {\n        instrument.triggerAttack(note, undefined, velocity);\n      } else {\n        instrument.triggerRelease();\n      }\n    }\n  }, [instrument, note, velocity]);\n\n  return (\n    <Wrapper type={type} user={user} inputPad={true} prefix={prefix}></Wrapper>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport Tone, {\n  Synth,\n  FMSynth,\n  Freeverb,\n  PingPongDelay,\n  Tremolo,\n  Vibrato,\n  Master,\n} from \"tone\";\nimport Wrapper from \"./Wrapper\";\n\nimport { getNote, getVelocity, getUser } from \"../../store/reducers/band\";\n\nexport default ({ type, prefix }) => {\n  const [instrument, setInstrument] = useState(null);\n  const note = useSelector(getNote(type));\n  const velocity = useSelector(getVelocity(type));\n  const user = useSelector(getUser(type));\n\n  useEffect(() => {\n    const inst = new FMSynth({\n      harmonicity: 3,\n      modulationIndex: 6,\n      detune: 0,\n      oscillator: {\n        type: Tone.sine,\n      },\n      envelope: {\n        attack: 0.01,\n        decay: 0.01,\n        sustain: 1,\n        release: 0.7,\n      },\n      modulation: {\n        type: Tone.sine,\n      },\n      modulationEnvelope: {\n        attack: 0.5,\n        decay: 0,\n        sustain: 0.4,\n        release: 0.2,\n      },\n    });\n    const reverb = new Freeverb(0.4, 1000);\n    const pingPongDelay = new PingPongDelay({\n      delayTime: \"16n\",\n      feedback: 0.8,\n      wet: 0.6,\n    });\n    const tremolo = new Tremolo(7, 0.4);\n    const vibrato = new Vibrato(3, 0.2);\n    tremolo.start();\n    inst.connect(tremolo);\n    tremolo.connect(vibrato);\n    vibrato.connect(reverb);\n    reverb.connect(pingPongDelay);\n    pingPongDelay.connect(Master);\n    setInstrument(inst);\n  }, []);\n\n  useEffect(() => {\n    if (instrument) {\n      if (note) {\n        instrument.triggerAttack(note, undefined, velocity);\n      } else {\n        instrument.triggerRelease();\n      }\n    }\n  }, [instrument, note, velocity]);\n\n  return (\n    <Wrapper type={type} user={user} inputPad={true} prefix={prefix}></Wrapper>\n  );\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Grid from \"@material-ui/core/Grid\";\nimport client from \"../mqtt\";\nimport { triggerAttack } from \"../store/reducers/band\";\n\nconst TriggerWrapper = styled(Grid)`\n  width: 100%;\n  height: 100px;\n  div {\n    width: 100%;\n    height: 100px;\n    background-color: lightgreen;\n    border: 1px solid black;\n  }\n`;\n\nconst Trigger = ({ clickHandler }) => {\n  return (\n    <>\n      <TriggerWrapper item xs={3} onClick={clickHandler}>\n        <div></div>\n      </TriggerWrapper>\n    </>\n  );\n};\n\nexport default ({ type, triggers, prefix, active }) => {\n  return (\n    <>\n      <Grid container spacing={1}>\n        {triggers.map((trigger, index) => {\n          return (\n            <Trigger\n              key={index}\n              clickHandler={() => {\n                if (!active) return;\n                // random velocity for use effect hook to detect change\n                client.publish(\n                  prefix,\n                  JSON.stringify(\n                    triggerAttack(type, trigger.pitch, Math.random())\n                  )\n                );\n              }}\n            ></Trigger>\n          );\n        })}\n      </Grid>\n    </>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Freeverb, PingPongDelay, Master, Sampler } from \"tone\";\nimport Wrapper from \"./Wrapper\";\nimport Triggers from \"../Triggers\";\n\nimport C2 from \"../../assets/samples/bird.wav\";\nimport F2 from \"../../assets/samples/waterbird.wav\";\nimport C3 from \"../../assets/samples/bonecrack.wav\";\nimport F3 from \"../../assets/samples/footsteps.wav\";\nimport C4 from \"../../assets/samples/windandchimes.wav\";\nimport F4 from \"../../assets/samples/toolfalling.wav\";\nimport C5 from \"../../assets/samples/cat.wav\";\nimport F5 from \"../../assets/samples/fireworks.wav\";\n\nimport { getNote, getVelocity, getUser } from \"../../store/reducers/band\";\n\nexport default ({ type, prefix }) => {\n  const [instrument, setInstrument] = useState(null);\n  const note = useSelector(getNote(type));\n  const velocity = useSelector(getVelocity(type));\n  const user = useSelector(getUser(type));\n  const instruments = useSelector((state) => state.band.instruments);\n  const name = useSelector((state) => state.system.name);\n\n  useEffect(() => {\n    const inst = new Sampler({\n      C2,\n      F2,\n      C3,\n      F3,\n      C4,\n      F4,\n      C5,\n      F5,\n    });\n    inst.volume.value = -6;\n    const reverb = new Freeverb(0.6, 3000);\n    const pingPongDelay = new PingPongDelay({\n      delayTime: \"32n\",\n      feedback: 0.7,\n      wet: 0.25,\n    });\n    inst.connect(pingPongDelay);\n    pingPongDelay.connect(reverb);\n    reverb.connect(Master);\n    setInstrument(inst);\n  }, []);\n  useEffect(() => {\n    if (instrument) {\n      if (note) {\n        // TODO: check why this is not working\n        // instrument.triggerAttack(note, 0, velocity);\n        instrument.triggerAttackRelease(note, 2000);\n      } else {\n        instrument.triggerRelease();\n      }\n    }\n  }, [instrument, note, velocity]);\n\n  return (\n    <Wrapper type={type} user={user} inputPad={false} prefix={prefix}>\n      <Triggers\n        active={user === name}\n        triggers={[\n          { pitch: \"C2\" },\n          { pitch: \"F2\" },\n          { pitch: \"C3\" },\n          { pitch: \"F3\" },\n          { pitch: \"C4\" },\n          { pitch: \"F4\" },\n          { pitch: \"C5\" },\n          { pitch: \"F5\" },\n        ]}\n        type={type}\n        prefix={prefix}\n      ></Triggers>\n    </Wrapper>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Freeverb, PingPongDelay, Master, Sampler } from \"tone\";\nimport Wrapper from \"./Wrapper\";\n\nimport { getNote, getVelocity, getUser } from \"../../store/reducers/band\";\n\nexport default ({ prefix, type, samples }) => {\n  const [instrument, setInstrument] = useState(null);\n  const note = useSelector(getNote(type));\n  const velocity = useSelector(getVelocity(type));\n  const user = useSelector(getUser(type));\n\n  useEffect(() => {\n    const inst = new Sampler(samples);\n    inst.volume.value = -6;\n    const reverb = new Freeverb(0.6, 5000);\n    const pingPongDelay = new PingPongDelay({\n      delayTime: \"32n\",\n      feedback: 0.7,\n      wet: 0.25,\n    });\n    inst.volume.value = -24;\n    inst.connect(pingPongDelay);\n    pingPongDelay.connect(reverb);\n    reverb.connect(Master);\n    setInstrument(inst);\n  }, [samples]);\n\n  useEffect(() => {\n    if (instrument) {\n      if (note) {\n        // TODO: check why this is not working\n        // instrument.triggerAttack(note, 0, velocity);\n        instrument.triggerAttack(note, undefined, velocity);\n      } else {\n        instrument.triggerRelease();\n      }\n    }\n  }, [instrument, note, velocity]);\n\n  return (\n    <Wrapper type={type} user={user} inputPad={true} prefix={prefix}></Wrapper>\n  );\n};\n","const types = {\n  ADDUSER: \"ADDUSER\",\n  SETUSERS: \"SETUSERS\",\n  SETNAME: \"SETNAME\",\n  HEARTBEAT: \"HEARTBEAT\",\n};\n\nconst defaultState = {\n  name: \"\", //current user name\n  users: [], //all users\n  heartBeats: new Map(),\n};\n\nexport default (state = defaultState, action) => {\n  switch (action.type) {\n    case types.HEARTBEAT: {\n      let heartBeats = new Map(state.heartBeats);\n      let users = [...state.users];\n      heartBeats.set(action.payload.value, Date.now());\n      heartBeats.forEach((value, key) => {\n        if (Date.now() > value + 10 * 1000) {\n          heartBeats.delete(key);\n          const index = users.indexOf(key);\n          if (index !== -1) users.splice(index, 1);\n        }\n      });\n      return {\n        ...state,\n        heartBeats,\n        users,\n      };\n    }\n    case types.SETUSERS: {\n      return {\n        ...state,\n        users: action.payload.value,\n      };\n    }\n    case types.ADDUSER: {\n      let users = [...state.users];\n      if (!users.includes(action.payload.value)) {\n        users.push(action.payload.value);\n      }\n      return {\n        ...state,\n        users,\n      };\n    }\n    case types.SETNAME: {\n      if (!state.users.includes(action.payload.value)) {\n        return {\n          ...state,\n          name: action.payload.value,\n        };\n      }\n      return state;\n    }\n    default:\n      return state;\n  }\n};\n\nexport const setUsers = (value) => {\n  return {\n    type: types.SETUSERS,\n    payload: {\n      value,\n    },\n  };\n};\nexport const addUser = (value) => {\n  return {\n    type: types.ADDUSER,\n    payload: {\n      value,\n    },\n  };\n};\nexport const setName = (value) => {\n  return {\n    type: types.SETNAME,\n    payload: {\n      value,\n    },\n  };\n};\nexport const heartBeat = (value) => {\n  return {\n    type: types.HEARTBEAT,\n    payload: {\n      value,\n    },\n  };\n};\n\nexport { types };\n","import React, { useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport client from \"../mqtt\";\nimport { heartBeat } from \"../store/reducers/system\";\nimport { setUser, getActiveUsers } from \"../store/reducers/band\";\n\nconst Container = styled.ul`\n  background-color: lightpink;\n  padding: 10px;\n  list-style-type: none;\n  li {\n    display: inline-block;\n    margin-right: 15px;\n  }\n`;\nexport default ({ prefix }) => {\n  const users = useSelector((state) => state.system.users);\n  const name = useSelector((state) => state.system.name);\n  const usersWithInstruments = useSelector(getActiveUsers);\n  useEffect(() => {\n    setInterval(() => {\n      client.publish(prefix, JSON.stringify(heartBeat(name)));\n    }, 1000);\n  }, [prefix, name]);\n\n  // useEffect(() => {\n  //   usersWithInstruments.forEach((user) => {\n  //     if (!users.includes(user)) {\n  //       client.publish(prefix, JSON.stringify(setUser(\"NONE\", user)));\n  //     }\n  //   });\n  // }, [users, usersWithInstruments, prefix]);\n\n  return (\n    <Container>\n      {users.map((user, index) => {\n        return (\n          <li key={index}>\n            {user !== name && <span>{user}</span>}\n            {user === name && <b>{user}</b>}\n          </li>\n        );\n      })}\n    </Container>\n  );\n};\n","const types = {\n  ADDMESSAGE: \"ADDMESSAGE\",\n};\n\nconst defaultState = {\n  messages: [],\n};\n\nexport default (state = defaultState, action) => {\n  switch (action.type) {\n    case types.ADDMESSAGE: {\n      let messages = [...state.messages];\n      messages.unshift(action.payload.message);\n      messages = messages.splice(0, 100);\n      return {\n        ...state,\n        messages,\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport const addMessage = (sender, text) => {\n  return {\n    type: types.ADDMESSAGE,\n    payload: {\n      message: {\n        sender,\n        text,\n      },\n    },\n  };\n};\nexport { types };\n","import React, { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport TextField from \"@material-ui/core/TextField\";\nimport styled from \"styled-components\";\nimport client from \"../mqtt\";\n\nimport { addMessage } from \"../store/reducers/chat\";\n\nconst Container = styled.div`\n  background-color: lightcoral;\n  padding: 10px;\n`;\nconst History = styled.ul`\n  height: 50px;\n  overflow-y: scroll;\n`;\nconst Name = styled.span`\n  font-weight: bold;\n`;\nexport default ({ prefix }) => {\n  const [text, setText] = useState(\"\");\n  const messages = useSelector((state) => state.chat.messages);\n  const name = useSelector((state) => state.system.name);\n\n  return (\n    <Container>\n      <TextField\n        fullWidth\n        value={text}\n        placeholder={\"something nice you wanna say to your friends\"}\n        onChange={(event) => setText(event.target.value)}\n        onKeyPress={(event) => {\n          if (event.key === \"Enter\") {\n            client.publish(prefix, JSON.stringify(addMessage(name, text)));\n            setText(\"\");\n          }\n        }}\n      ></TextField>\n      <History>\n        {messages.map((message, index) => {\n          return (\n            <li key={index}>\n              <Name>{message.sender}</Name> > {message.text}\n            </li>\n          );\n        })}\n      </History>\n    </Container>\n  );\n};\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Grid from \"@material-ui/core/Grid\";\n\nimport client from \"../mqtt\";\nimport { setUser, getChoosenInstrument } from \"../store/reducers/band\";\n\nimport { instruments as types } from \"../store/reducers/band\";\n\nconst Container = styled.div`\n  width: 100%;\n  margin-top: 25px;\n  margin-bottom: 25px;\n`;\n\nexport default ({ prefix }) => {\n  const name = useSelector((state) => state.system.name);\n  const instruments = useSelector((state) => state.band.instruments);\n  const choosenInstrument = useSelector(getChoosenInstrument(name));\n  return (\n    <Container>\n      <Grid container>\n        <Grid item xs={12} sm={4}>\n          <FormControl fullWidth>\n            <InputLabel>Pick an instrument</InputLabel>\n            <Select\n              value={choosenInstrument}\n              onChange={(event) => {\n                let taken = false;\n                Object.keys(instruments).forEach((key) => {\n                  if (instruments[key].user !== \"\") {\n                    taken = true;\n                  }\n                });\n                if (true) {\n                  client.publish(\n                    prefix,\n                    JSON.stringify(setUser(event.target.value, name))\n                  );\n                }\n              }}\n              fullWidth\n            >\n              <MenuItem value={\"NONE\"}>none</MenuItem>;\n              {Object.keys(types).map((key, index) => {\n                return (\n                  <MenuItem\n                    // disabled={instruments[key].user !== \"\"}\n                    value={types[key]}\n                    key={index}\n                  >\n                    {types[key]}\n                  </MenuItem>\n                );\n              })}\n            </Select>\n          </FormControl>\n        </Grid>\n      </Grid>\n    </Container>\n  );\n};\n","import { combineReducers } from \"redux\";\n\nimport system from \"./system\";\nimport band from \"./band\";\nimport chat from \"./chat\";\n\nconst appReducer = combineReducers({\n  system,\n  band,\n  chat,\n});\n\nexport default (state, action) => {\n  if (action.type === \"RESET\") {\n    return appReducer(undefined, action);\n  } else if (action.type === \"SETSTATE\") {\n    return appReducer(action.payload, {\n      type: \"IGNORE\",\n    });\n  } else {\n    return appReducer(state, action);\n  }\n};\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport { createEpicMiddleware } from \"redux-observable\";\n\nimport rootReducer from \"./reducers/rootReducer\";\nimport rootEpic from \"./epics/rootEpic\";\n\nconst epicMiddleware = createEpicMiddleware();\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancer(applyMiddleware(epicMiddleware))\n);\n\nepicMiddleware.run(rootEpic);\n// store.subscribe(() => console.log(store.getState()))\nstore.dispatch({\n  type: \"INIT\",\n});\n\nexport default store;\n","import { filter, switchMap, map, takeUntil } from \"rxjs/operators\";\nimport { interval } from \"rxjs\";\n\nexport default (action$) =>\n  action$.pipe(\n    filter((action) => action.type === \"STARTHEARTBEAT\"),\n    switchMap((action) =>\n      interval(30000).pipe(\n        map((action) => {\n          return {\n            type: \"HEARTBEAT\",\n            payload: {\n              value: 1,\n            },\n          };\n        }),\n        takeUntil(action$.ofType(\"STOPHEARTBEAT\"))\n      )\n    )\n  );\n","import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport Juno from \"./instruments/Juno\";\nimport Rhodes from \"./instruments/Rhodes\";\nimport MPC from \"./instruments/MPC\";\nimport Sampler from \"./instruments/Sampler\";\n\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\n\nimport { setUsers, addUser, setName } from \"../store/reducers/system\";\n\nimport UserList from \"./UserList\";\nimport Chat from \"./Chat\";\nimport InstrumentChooser from \"./InstrumentChooser\";\n\nimport store from \"../store\";\nimport { instruments } from \"../store/reducers/band\";\nimport client from \"../mqtt\";\n\nimport steeldrum_C4 from \"../assets/samples/Roland-GR-1-Steel-Drum-C4.wav\";\nconst celloSamples = {\n  C4: steeldrum_C4,\n};\n\nconst Intro = styled.div`\n  margin-top: 128px;\n`;\nexport default () => {\n  const { id } = useParams();\n  const [requestedName, setRequestedName] = useState(\"\");\n  const name = useSelector((state) => state.system.name);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    client.subscribe(`vjam/${id}`, function (err) {\n      if (!err) {\n        console.log(`subscribed to vjam/${id}`);\n      }\n    });\n    client.subscribe(`vjam/${id}/users/#`, function (err) {\n      if (!err) {\n        console.log(`subscribed to vjam/${id}/users/#`);\n      }\n    });\n\n    client.on(\"message\", function (topic, message) {\n      if (topic === `vjam/${id}`) {\n        let action;\n        try {\n          action = JSON.parse(message.toString());\n          store.dispatch(action);\n        } catch (e) {}\n      }\n      if (topic === `vjam/${id}/users/get`) {\n        const data = JSON.parse(message.toString());\n        if (data.id !== client.options.clientId) {\n          client.publish(\n            `vjam/${id}/users/set`,\n            JSON.stringify(store.getState().system.users)\n          );\n        }\n      }\n      if (topic === `vjam/${id}/users/set`) {\n        const data = JSON.parse(message.toString());\n        store.dispatch(setUsers(data));\n      }\n    });\n\n    client.publish(\n      `vjam/${id}/users/get`,\n      JSON.stringify({ id: client.options.clientId })\n    );\n  }, [id]);\n  return (\n    <>\n      {name === \"\" && (\n        <Intro>\n          <Grid container>\n            <Grid item xs={2} sm={3}></Grid>\n            <Grid item xs={8} sm={6}>\n              Please let the others know your name. If it is not yet taken, then\n              you will automatically enter the jam session. Submit by pressing\n              return.\n            </Grid>\n            <Grid item xs={2} sm={3}></Grid>\n\n            <Grid item xs={2} sm={3}></Grid>\n            <Grid item xs={8} sm={6}>\n              <TextField\n                fullWidth\n                value={requestedName}\n                onChange={(event) => {\n                  setRequestedName(event.target.value);\n                }}\n                onKeyPress={(event) => {\n                  if (event.key === \"Enter\") {\n                    client.publish(\n                      `vjam/${id}`,\n                      JSON.stringify(addUser(requestedName))\n                    );\n                    dispatch(setName(requestedName));\n                  }\n                }}\n              ></TextField>\n            </Grid>\n          </Grid>\n        </Intro>\n      )}\n\n      {name !== \"\" && (\n        <>\n          <Grid container>\n            <Grid item xs={12}>\n              <UserList prefix={`vjam/${id}`}></UserList>\n            </Grid>\n            <Grid item xs={12}>\n              <Chat prefix={`vjam/${id}`}></Chat>\n            </Grid>\n          </Grid>\n\n          <InstrumentChooser prefix={`vjam/${id}`}></InstrumentChooser>\n          <Grid container spacing={3} justify=\"flex-start\">\n            <Juno type={instruments.JUNO} prefix={`vjam/${id}`}></Juno>\n            <Rhodes type={instruments.RHODES} prefix={`vjam/${id}`}></Rhodes>\n            <MPC type={instruments.MPC} prefix={`vjam/${id}`}></MPC>\n            <Sampler\n              type={instruments.STEELDRUM}\n              samples={celloSamples}\n              prefix={`vjam/${id}`}\n            ></Sampler>\n          </Grid>\n        </>\n      )}\n    </>\n  );\n};\n","import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport Home from \"./components/Home\";\nimport Room from \"./components/Room\";\n\nimport store from \"./store\";\n\nconst Container = styled.div`\n  margin-left: 15px;\n  margin-right: 15px;\n`;\n\nfunction App() {\n  return (\n    <Container>\n      <Provider store={store}>\n        <Router>\n          <Switch>\n            <Route path=\"/rooms/:id\">\n              <Room />\n            </Route>\n            <Route path=\"/\">\n              <Home />\n            </Route>\n          </Switch>\n        </Router>\n      </Provider>\n    </Container>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}