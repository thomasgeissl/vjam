{"version":3,"sources":["assets/samples/footsteps.wav","assets/samples/fireworks.wav","assets/samples/windandchimes.wav","assets/samples/bonecrack.wav","components/Home.js","components/instruments/Wrapper.js","mqtt.js","store/reducers/band.js","components/instruments/Juno.js","components/instruments/Rhodes.js","components/instruments/Sampler.js","store/reducers/system.js","store/reducers/rootReducer.js","store/index.js","components/Room.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Container","styled","div","Intro","section","RoomChooser","Door","useState","length","result","characters","charactersLength","i","charAt","Math","floor","random","generateId","room","setRoom","history","useHistory","TextField","value","onChange","event","target","Button","onClick","Tone","context","state","resume","push","children","Grid","item","xs","sm","client","mqtt","connect","types","instruments","defaultState","JUNO","note","velocity","RHODES","triggerAttack","instrument","type","payload","triggerRelease","Input","scale","prefix","patched","setPatched","setInstrument","mouseDown","setMouseDown","useSelector","band","useEffect","pad","Synth","oscillator","envelope","attack","decay","sustain","release","reverb","Freeverb","pingPongDelay","PingPongDelay","delayTime","feedback","wet","Master","Wrapper","onMouseDown","x","clientX","getBoundingClientRect","left","offsetWidth","y","clientY","top","offsetHeight","n","publish","JSON","stringify","onMouseMove","onMouseUp","inst","frequency","harmonicity","modulationIndex","resonance","octaves","appReducer","combineReducers","system","action","temperature","current","program","newState","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","undefined","applyMiddleware","dispatch","id","useParams","subscribe","err","console","log","on","topic","message","parse","toString","e","Juno","Rhodes","App","className","path","Room","Home","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"iFAAAA,EAAOC,QAAU,IAA0B,uC,oBCA3CD,EAAOC,QAAU,IAA0B,uC,oBCA3CD,EAAOC,QAAU,IAA0B,2C,oBCA3CD,EAAOC,QAAU,IAA0B,uC,mvBCO3C,IAAMC,EAAYC,IAAOC,IAAV,KAKTC,EAAQF,IAAOG,QAAV,KACLC,EAAcJ,IAAOG,QAAV,KAMXE,EAAOL,IAAOC,IAAV,KAaK,aAAO,IAAD,EACKK,mBAVP,SAACC,GAIlB,IAHA,IAAIC,EAAS,GACTC,EAAa,uCACbC,EAAmBD,EAAWF,OACzBI,EAAI,EAAGA,EAAIJ,EAAQI,IAC1BH,GAAUC,EAAWG,OAAOC,KAAKC,MAAMD,KAAKE,SAAWL,IAEzD,OAAOF,EAG0BQ,CAAW,IADzB,mBACZC,EADY,KACNC,EADM,KAEbC,EAAUC,cAChB,OACE,kBAACrB,EAAD,KACE,kBAACG,EAAD,wBACkB,6BADlB,uCAGA,kBAACE,EAAD,KACE,oMAKA,kBAACC,EAAD,KACE,kBAACgB,EAAA,EAAD,CACEC,MAAOL,EACPM,SAAU,SAACC,GAAD,OAAWN,EAAQM,EAAMC,OAAOH,UAE5C,kBAACI,EAAA,EAAD,CACEC,QAAS,WACoB,YAAvBC,IAAKC,QAAQC,OACfF,IAAKC,QAAQE,SAEfZ,EAAQa,KAAR,gBAAsBf,MAL1B,a,kHC/CV,IAAMlB,EAAYC,IAAOC,IAAV,KAIA,cAAmB,IAAhBgC,EAAe,EAAfA,SAChB,OACE,kBAACC,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrB,kBAAC,EAAD,KAAYJ,K,SCRHK,E,OADAC,EAAKC,QAAQ,mC,QCFtBC,EACW,gBADXA,EAEY,iBAEZC,EACE,OADFA,EAEI,SAGJC,EAAe,CACnBD,YAAa,CACXE,KAAM,CAAEC,KAAM,KAAMC,SAAU,GAC9BC,OAAQ,CAAEF,KAAM,KAAMC,SAAU,KAyBvBE,EAAgB,SAACC,EAAYJ,EAAMC,GAC9C,MAAO,CACLI,KAAMT,EACNU,QAAS,CACPF,aACAJ,OACAC,cAIOM,EAAiB,SAACH,GAC7B,MAAO,CACLC,KAAMT,EACNU,QAAS,CACPF,gB,mICrCN,IAAMI,EAAQrD,IAAOC,IAAV,KAUX,IAAMqD,EAAQ,CACZ,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MAGa,cAAiB,IAAdC,EAAa,EAAbA,OAAa,EACCjD,oBAAS,GADV,mBACtBkD,EADsB,KACbC,EADa,OAEOnD,mBAAS,MAFhB,mBAEtB2C,EAFsB,KAEVS,EAFU,OAGKpD,oBAAS,GAHd,mBAGtBqD,EAHsB,KAGXC,EAHW,KAIvBf,EAAOgB,aAAY,SAAC/B,GAAD,OAAWA,EAAMgC,KAAKpB,YAAYE,KAAKC,QAC1DC,EAAWe,aAAY,SAAC/B,GAAD,OAAWA,EAAMgC,KAAKpB,YAAYE,KAAKE,YAoCpE,OAlCAiB,qBAAU,WACR,IAAKP,EAAS,CACZ,IAAMQ,EAAM,IAAIC,QAAM,CACpBC,WAAY,CACVhB,KAAM,QAERiB,SAAU,CACRC,OAAQ,IACRC,MAAO,GACPC,QAAS,GACTC,QAAS,KAGPC,EAAS,IAAIC,WAAS,GAAK,KAC3BC,EAAgB,IAAIC,gBAAc,CACtCC,UAAW,KACXC,SAAU,GACVC,IAAK,KAEPd,EAAIxB,QAAQuC,UACZL,EAAclC,QAAQgC,GACtBA,EAAOhC,QAAQuC,UACfrB,EAAcM,GACdP,GAAW,GAETR,IACEJ,EACFI,EAAWD,cAAcH,EAAM,EAAGC,GAElCG,EAAWG,qBAMf,kBAAC4B,EAAD,KACE,kBAAC3B,EAAD,CACE4B,YAAa,SAACzD,GACZoC,GAAa,GACb,IAAMsB,GACH1D,EAAM2D,QAAU3D,EAAMC,OAAO2D,wBAAwBC,MACtD7D,EAAMC,OAAO6D,YACTC,EACJ,GACC/D,EAAMgE,QAAUhE,EAAMC,OAAO2D,wBAAwBK,KACpDjE,EAAMC,OAAOiE,aAEXC,EAAIrC,EAAMzC,KAAKC,MAAMoE,EAAI5B,EAAM/C,SACrC+B,EAAOsD,QACLrC,EACAsC,KAAKC,UAAU9C,EAAcN,EAAkBiD,EAAGJ,EAAI,EAAI,OAG9DQ,YAAa,SAACvE,GACZ,GAAImC,EAAW,CACb,IAAMuB,GACH1D,EAAM2D,QAAU3D,EAAMC,OAAO2D,wBAAwBC,MACtD7D,EAAMC,OAAO6D,YACTC,EACJ,GACC/D,EAAMgE,QAAUhE,EAAMC,OAAO2D,wBAAwBK,KACpDjE,EAAMC,OAAOiE,aACjBpD,EAAOsD,QACLrC,EACAsC,KAAKC,UACH9C,EACEN,EACAY,EAAMzC,KAAKC,MAAMoE,EAAI5B,EAAM/C,SAC3BgF,EAAI,EAAI,QAMlBS,UAAW,SAACxE,GACVoC,GAAa,GACbtB,EAAOsD,QACLrC,EACAsC,KAAKC,UAAU1C,EAAeV,U,yIChH1C,IAAMW,EAAQrD,IAAOC,IAAV,KAUX,IAAMqD,EAAQ,CACZ,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MAGa,cAAiB,IAAdC,EAAa,EAAbA,OAAa,EACCjD,oBAAS,GADV,mBACtBkD,EADsB,KACbC,EADa,OAEOnD,mBAAS,MAFhB,mBAEtB2C,EAFsB,KAEVS,EAFU,OAGKpD,oBAAS,GAHd,mBAGtBqD,EAHsB,KAGXC,EAHW,KAIvBf,EAAOgB,aAAY,SAAC/B,GAAD,OAAWA,EAAMgC,KAAKpB,YAAYK,OAAOF,QAC5DC,EAAWe,aACf,SAAC/B,GAAD,OAAWA,EAAMgC,KAAKpB,YAAYK,OAAOD,YAsC3C,OAnCAiB,qBAAU,WACR,IAAKP,EAAS,CACZ,IAAMyC,EAAO,IAAIhC,QAAM,CACrBiC,UAAW,IACX/B,SAAU,CACRC,OAAQ,KACRC,MAAO,IACPE,QAAS,IAEX4B,YAAa,IACbC,gBAAiB,GACjBC,UAAW,IACXC,QAAS,MAEL9B,EAAS,IAAIC,WAAS,GAAK,KAC3BC,EAAgB,IAAIC,gBAAc,CACtCC,UAAW,KACXC,SAAU,GACVC,IAAK,KAEPmB,EAAKzD,QAAQuC,UACbL,EAAclC,QAAQgC,GACtBA,EAAOhC,QAAQuC,UACfrB,EAAcuC,GACdxC,GAAW,GAETR,IACEJ,EACFI,EAAWD,cAAcH,EAAM,EAAGC,GAElCG,EAAWG,qBAMf,kBAAC4B,EAAD,KACE,kBAAC,EAAD,CACEC,YAAa,SAACzD,GACZoC,GAAa,GACb,IAAMsB,GACH1D,EAAM2D,QAAU3D,EAAMC,OAAO2D,wBAAwBC,MACtD7D,EAAMC,OAAO6D,YACTC,EACJ,GACC/D,EAAMgE,QAAUhE,EAAMC,OAAO2D,wBAAwBK,KACpDjE,EAAMC,OAAOiE,aAEXC,EAAIrC,EAAMzC,KAAKC,MAAMoE,EAAI5B,EAAM/C,SACrC+B,EAAOsD,QACLrC,EACAsC,KAAKC,UAAU9C,EAAcN,EAAoBiD,EAAGJ,EAAI,EAAI,OAGhEQ,YAAa,SAACvE,GACZ,GAAImC,EAAW,CACb,IAAMuB,GACH1D,EAAM2D,QAAU3D,EAAMC,OAAO2D,wBAAwBC,MACtD7D,EAAMC,OAAO6D,YACTC,EACJ,GACC/D,EAAMgE,QAAUhE,EAAMC,OAAO2D,wBAAwBK,KACpDjE,EAAMC,OAAOiE,aACjBpD,EAAOsD,QACLrC,EACAsC,KAAKC,UACH9C,EACEN,EACAY,EAAMzC,KAAKC,MAAMoE,EAAI5B,EAAM/C,SAC3BgF,EAAI,EAAI,QAMlBS,UAAW,SAACxE,GACVoC,GAAa,GACbtB,EAAOsD,QACLrC,EACAsC,KAAKC,UAAU1C,EAAeV,U,8JClH5B1C,IAAOC,IAAV,KAUX,I,QCzBMwC,EACY,iBADZA,EAEQ,aAFRA,EAGQ,aAGRE,EAAe,GCDf4D,GAAaC,YAAgB,CACjCC,ODEa,WAAmC,IAAlC3E,EAAiC,uDAAzBa,EAAc+D,EAAW,uCAC/C,OAAQA,EAAOxD,MACb,KAAKT,EACH,OAAO,eACFX,EADL,CAEE6E,YAAaD,EAAOvD,QAAQ7B,QAGhC,KAAKmB,EACH,OAAO,eACFX,EADL,CAEE8E,QAASF,EAAOvD,QAAQ7B,QAG5B,KAAKmB,EACH,OAAO,eACFX,EADL,CAEE+E,QAASH,EAAOvD,QAAQ7B,QAG5B,QACE,OAAOQ,ICtBXgC,KLSa,WAAmC,IAAlChC,EAAiC,uDAAzBa,EAAc+D,EAAW,uCAC/C,OAAQA,EAAOxD,MACb,KAAKT,EACH,IAAIqE,EAAQ,eAAQhF,GAKpB,OAJAgF,EAASpE,YAAYgE,EAAOvD,QAAQF,YAAYJ,KAC9C6D,EAAOvD,QAAQN,KACjBiE,EAASpE,YAAYgE,EAAOvD,QAAQF,YAAYH,SAC9C4D,EAAOvD,QAAQL,SACVgE,EAET,KAAKrE,EACH,IAAIqE,EAAQ,eAAQhF,GAGpB,OAFAgF,EAASpE,YAAYgE,EAAOvD,QAAQF,YAAYJ,KAAO,KACvDiE,EAASpE,YAAYgE,EAAOvD,QAAQF,YAAYH,SAAW,EACpD,eAAKgE,GAEd,QACE,OAAOhF,MM1BPiF,GAAkBC,OAAOC,sCAAwCC,IAEjEC,GAAQC,aDCC,SAACtF,EAAO4E,GACrB,MAAoB,UAAhBA,EAAOxD,KACFqD,QAAWc,EAAWX,GACJ,aAAhBA,EAAOxD,KACTqD,GAAWG,EAAOvD,QAAS,CAChCD,KAAM,WAGDqD,GAAWzE,EAAO4E,KCP3BK,GACEO,gBAOJH,GAAMI,SAAS,CACbrE,KAAM,SAGOiE,UCfA,cAAO,IACZK,EAAOC,cAAPD,GADW,EAEWlH,oBAAS,GAFpB,mBAEZkD,EAFY,KAEHC,EAFG,KA0BnB,OAvBAM,qBAAU,WACJyD,IAAOhE,IAETlB,EAAOoF,UAAP,eAAyBF,IAAM,SAAUG,GAClCA,GACHC,QAAQC,IAAI,iBAKhBvF,EAAOwF,GAAG,WAAW,SAAUC,EAAOC,GAElC,IAAItB,EADN,GAAIqB,IAAK,eAAaP,GAEpB,IACEd,EAASb,KAAKoC,MAAMD,EAAQE,YAC5Bf,GAAMI,SAASb,GACf,MAAOyB,QAIb1E,GAAW,OAIb,oCACE,kBAAC2E,EAAD,CAAM7E,OAAM,eAAUiE,KACtB,kBAACa,EAAD,CAAQ9E,OAAM,eAAUiE,OCPfc,OAnBf,WACE,OACE,kBAAC,IAAD,CAAUnB,MAAOA,IACf,yBAAKoB,UAAU,OACb,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,cACV,kBAACC,GAAD,OAEF,kBAAC,IAAD,CAAOD,KAAK,KACV,kBAACE,EAAD,YCTMC,QACW,cAA7B3B,OAAO4B,SAASC,UAEe,UAA7B7B,OAAO4B,SAASC,UAEhB7B,OAAO4B,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL/B,QAAQ+B,MAAMA,EAAM3B,c","file":"static/js/main.a1f8e1d3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/footsteps.3497fc94.wav\";","module.exports = __webpack_public_path__ + \"static/media/fireworks.23af77c2.wav\";","module.exports = __webpack_public_path__ + \"static/media/windandchimes.4a6e1b51.wav\";","module.exports = __webpack_public_path__ + \"static/media/bonecrack.c37d9ccf.wav\";","import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Tone from \"tone\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  max-width: 768px;\r\n  margin: auto;\r\n  margin-top: 100px;\r\n`;\r\nconst Intro = styled.section``;\r\nconst RoomChooser = styled.section`\r\n  p {\r\n    margin-top: 24px;\r\n    margin-bottom: 24px;\r\n  }\r\n`;\r\nconst Door = styled.div`\r\n  margin-top: 92px;\r\n  text-align: center;\r\n`;\r\nconst generateId = (length) => {\r\n  var result = \"\";\r\n  var characters = \"abcdefghijklmnopqrstuvwxyz0123456789\";\r\n  var charactersLength = characters.length;\r\n  for (var i = 0; i < length; i++) {\r\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\r\n  }\r\n  return result;\r\n};\r\nexport default () => {\r\n  const [room, setRoom] = useState(generateId(4));\r\n  const history = useHistory();\r\n  return (\r\n    <Container>\r\n      <Intro>\r\n        Welcome to vjam,<br></br>a virtual jam session for everyone.\r\n      </Intro>\r\n      <RoomChooser>\r\n        <p>\r\n          Please enter a valid room id provided by your jam session partners.\r\n          You can also open a new one by using any random id, which is hopefully\r\n          not yet taken - good luck.\r\n        </p>\r\n        <Door>\r\n          <TextField\r\n            value={room}\r\n            onChange={(event) => setRoom(event.target.value)}\r\n          ></TextField>\r\n          <Button\r\n            onClick={() => {\r\n              if (Tone.context.state !== \"running\") {\r\n                Tone.context.resume();\r\n              }\r\n              history.push(`rooms/${room}`);\r\n            }}\r\n          >\r\n            enter\r\n          </Button>\r\n        </Door>\r\n      </RoomChooser>\r\n    </Container>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nconst Container = styled.div`\r\n  height: 200px;\r\n  width: 100%;\r\n`;\r\nexport default ({ children }) => {\r\n  return (\r\n    <Grid item xs={12} sm={3}>\r\n      <Container>{children}</Container>\r\n    </Grid>\r\n  );\r\n};\r\n","import mqtt from \"mqtt\";\r\n// const client = mqtt.connect(\"ws://localhost:9001\");\r\nconst client = mqtt.connect(\"mqtt://try:try@broker.shiftr.io\");\r\nexport default client;\r\n","const types = {\r\n  TRIGGERATTACK: \"TRIGGERATTACK\",\r\n  TRIGGERRELEASE: \"TRIGGERRELEASE\",\r\n};\r\nconst instruments = {\r\n  JUNO: \"JUNO\",\r\n  RHODES: \"RHODES\",\r\n};\r\n\r\nconst defaultState = {\r\n  instruments: {\r\n    JUNO: { note: null, velocity: 0 },\r\n    RHODES: { note: null, velocity: 0 },\r\n  },\r\n};\r\n\r\nexport default (state = defaultState, action) => {\r\n  switch (action.type) {\r\n    case types.TRIGGERATTACK: {\r\n      let newState = { ...state };\r\n      newState.instruments[action.payload.instrument].note =\r\n        action.payload.note;\r\n      newState.instruments[action.payload.instrument].velocity =\r\n        action.payload.velocity;\r\n      return newState;\r\n    }\r\n    case types.TRIGGERRELEASE: {\r\n      let newState = { ...state };\r\n      newState.instruments[action.payload.instrument].note = null;\r\n      newState.instruments[action.payload.instrument].velocity = 0;\r\n      return { ...newState };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const triggerAttack = (instrument, note, velocity) => {\r\n  return {\r\n    type: types.TRIGGERATTACK,\r\n    payload: {\r\n      instrument,\r\n      note,\r\n      velocity,\r\n    },\r\n  };\r\n};\r\nexport const triggerRelease = (instrument) => {\r\n  return {\r\n    type: types.TRIGGERRELEASE,\r\n    payload: {\r\n      instrument,\r\n    },\r\n  };\r\n};\r\nexport { types, instruments };\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Synth, Freeverb, PingPongDelay, PolySynth, Master } from \"tone\";\r\nimport Wrapper from \"./Wrapper\";\r\nimport client from \"../../mqtt\";\r\n\r\nimport {\r\n  instruments,\r\n  triggerAttack,\r\n  triggerRelease,\r\n} from \"../../store/reducers/band\";\r\n\r\nimport styled from \"styled-components\";\r\n\r\nconst Input = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: blue;\r\n`;\r\n\r\nfunction map_range(value, low1, high1, low2, high2) {\r\n  return low2 + ((high2 - low2) * (value - low1)) / (high1 - low1);\r\n}\r\n\r\nconst scale = [\r\n  \"C3\",\r\n  \"D3\",\r\n  \"E3\",\r\n  \"F3\",\r\n  \"G3\",\r\n  \"A3\",\r\n  \"B3\",\r\n  \"C4\",\r\n  \"D4\",\r\n  \"E4\",\r\n  \"F4\",\r\n  \"G4\",\r\n  \"A4\",\r\n  \"B4\",\r\n];\r\n\r\nexport default ({ prefix }) => {\r\n  const [patched, setPatched] = useState(false);\r\n  const [instrument, setInstrument] = useState(null);\r\n  const [mouseDown, setMouseDown] = useState(false);\r\n  const note = useSelector((state) => state.band.instruments.JUNO.note);\r\n  const velocity = useSelector((state) => state.band.instruments.JUNO.velocity);\r\n\r\n  useEffect(() => {\r\n    if (!patched) {\r\n      const pad = new Synth({\r\n        oscillator: {\r\n          type: \"sine\",\r\n        },\r\n        envelope: {\r\n          attack: 0.05,\r\n          decay: 0.1,\r\n          sustain: 0.3,\r\n          release: 1,\r\n        },\r\n      });\r\n      const reverb = new Freeverb(0.4, 1000);\r\n      const pingPongDelay = new PingPongDelay({\r\n        delayTime: \"8n\",\r\n        feedback: 0.4,\r\n        wet: 0.5,\r\n      });\r\n      pad.connect(Master);\r\n      pingPongDelay.connect(reverb);\r\n      reverb.connect(Master);\r\n      setInstrument(pad);\r\n      setPatched(true);\r\n    }\r\n    if (instrument) {\r\n      if (note) {\r\n        instrument.triggerAttack(note, 0, velocity);\r\n      } else {\r\n        instrument.triggerRelease();\r\n      }\r\n    }\r\n  });\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Input\r\n        onMouseDown={(event) => {\r\n          setMouseDown(true);\r\n          const x =\r\n            (event.clientX - event.target.getBoundingClientRect().left) /\r\n            event.target.offsetWidth;\r\n          const y =\r\n            1 -\r\n            (event.clientY - event.target.getBoundingClientRect().top) /\r\n              event.target.offsetHeight;\r\n\r\n          const n = scale[Math.floor(x * scale.length)];\r\n          client.publish(\r\n            prefix,\r\n            JSON.stringify(triggerAttack(instruments.JUNO, n, y / 2 + 0.5))\r\n          );\r\n        }}\r\n        onMouseMove={(event) => {\r\n          if (mouseDown) {\r\n            const x =\r\n              (event.clientX - event.target.getBoundingClientRect().left) /\r\n              event.target.offsetWidth;\r\n            const y =\r\n              1 -\r\n              (event.clientY - event.target.getBoundingClientRect().top) /\r\n                event.target.offsetHeight;\r\n            client.publish(\r\n              prefix,\r\n              JSON.stringify(\r\n                triggerAttack(\r\n                  instruments.JUNO,\r\n                  scale[Math.floor(x * scale.length)],\r\n                  y / 2 + 0.5\r\n                )\r\n              )\r\n            );\r\n          }\r\n        }}\r\n        onMouseUp={(event) => {\r\n          setMouseDown(false);\r\n          client.publish(\r\n            prefix,\r\n            JSON.stringify(triggerRelease(instruments.JUNO))\r\n          );\r\n        }}\r\n      ></Input>\r\n    </Wrapper>\r\n  );\r\n};\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Synth, Freeverb, PingPongDelay, MetalSynth, Master } from \"tone\";\r\nimport Wrapper from \"./Wrapper\";\r\nimport client from \"../../mqtt\";\r\n\r\nimport {\r\n  instruments,\r\n  triggerAttack,\r\n  triggerRelease,\r\n} from \"../../store/reducers/band\";\r\n\r\nimport styled from \"styled-components\";\r\n\r\nconst Input = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: lightgreen;\r\n`;\r\n\r\nfunction map_range(value, low1, high1, low2, high2) {\r\n  return low2 + ((high2 - low2) * (value - low1)) / (high1 - low1);\r\n}\r\n\r\nconst scale = [\r\n  \"C3\",\r\n  \"D3\",\r\n  \"E3\",\r\n  \"F3\",\r\n  \"G3\",\r\n  \"A3\",\r\n  \"B3\",\r\n  \"C4\",\r\n  \"D4\",\r\n  \"E4\",\r\n  \"F4\",\r\n  \"G4\",\r\n  \"A4\",\r\n  \"B4\",\r\n];\r\n\r\nexport default ({ prefix }) => {\r\n  const [patched, setPatched] = useState(false);\r\n  const [instrument, setInstrument] = useState(null);\r\n  const [mouseDown, setMouseDown] = useState(false);\r\n  const note = useSelector((state) => state.band.instruments.RHODES.note);\r\n  const velocity = useSelector(\r\n    (state) => state.band.instruments.RHODES.velocity\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (!patched) {\r\n      const inst = new Synth({\r\n        frequency: 200,\r\n        envelope: {\r\n          attack: 0.001,\r\n          decay: 1.4,\r\n          release: 0.2,\r\n        },\r\n        harmonicity: 5.1,\r\n        modulationIndex: 32,\r\n        resonance: 4000,\r\n        octaves: 1.5,\r\n      });\r\n      const reverb = new Freeverb(0.4, 1000);\r\n      const pingPongDelay = new PingPongDelay({\r\n        delayTime: \"8n\",\r\n        feedback: 0.4,\r\n        wet: 0.5,\r\n      });\r\n      inst.connect(Master);\r\n      pingPongDelay.connect(reverb);\r\n      reverb.connect(Master);\r\n      setInstrument(inst);\r\n      setPatched(true);\r\n    }\r\n    if (instrument) {\r\n      if (note) {\r\n        instrument.triggerAttack(note, 0, velocity);\r\n      } else {\r\n        instrument.triggerRelease();\r\n      }\r\n    }\r\n  });\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Input\r\n        onMouseDown={(event) => {\r\n          setMouseDown(true);\r\n          const x =\r\n            (event.clientX - event.target.getBoundingClientRect().left) /\r\n            event.target.offsetWidth;\r\n          const y =\r\n            1 -\r\n            (event.clientY - event.target.getBoundingClientRect().top) /\r\n              event.target.offsetHeight;\r\n\r\n          const n = scale[Math.floor(x * scale.length)];\r\n          client.publish(\r\n            prefix,\r\n            JSON.stringify(triggerAttack(instruments.RHODES, n, y / 2 + 0.5))\r\n          );\r\n        }}\r\n        onMouseMove={(event) => {\r\n          if (mouseDown) {\r\n            const x =\r\n              (event.clientX - event.target.getBoundingClientRect().left) /\r\n              event.target.offsetWidth;\r\n            const y =\r\n              1 -\r\n              (event.clientY - event.target.getBoundingClientRect().top) /\r\n                event.target.offsetHeight;\r\n            client.publish(\r\n              prefix,\r\n              JSON.stringify(\r\n                triggerAttack(\r\n                  instruments.RHODES,\r\n                  scale[Math.floor(x * scale.length)],\r\n                  y / 2 + 0.5\r\n                )\r\n              )\r\n            );\r\n          }\r\n        }}\r\n        onMouseUp={(event) => {\r\n          setMouseDown(false);\r\n          client.publish(\r\n            prefix,\r\n            JSON.stringify(triggerRelease(instruments.RHODES))\r\n          );\r\n        }}\r\n      ></Input>\r\n    </Wrapper>\r\n  );\r\n};\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport { Synth, Sampler, Reverb, PingPongDelay, Master } from \"tone\";\r\nimport Wrapper from \"./Wrapper\";\r\n\r\nimport { triggerAttack, triggerRelease } from \"../../store/reducers/band\";\r\n\r\nimport client from \"../../mqtt\";\r\n\r\nimport footsteps from \"../../assets/samples/footsteps.wav\";\r\nimport fireworks from \"../../assets/samples/fireworks.wav\";\r\nimport wind from \"../../assets/samples/windandchimes.wav\";\r\nimport bonecrack from \"../../assets/samples/bonecrack.wav\";\r\n\r\nconst Input = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: red;\r\n`;\r\n\r\nfunction map_range(value, low1, high1, low2, high2) {\r\n  return low2 + ((high2 - low2) * (value - low1)) / (high1 - low1);\r\n}\r\n\r\nconst scale = [\"C3\", \"D3\", \"E3\", \"F3\"];\r\n\r\nexport default () => {\r\n  const [mounted, setMounted] = useState(false);\r\n  const [mouseDown, setMouseDown] = useState(false);\r\n  const synthRef = useRef(null);\r\n  const band = useSelector((state) => state.band);\r\n  const note = band.padNote;\r\n  const velocity = band.padVelocity;\r\n\r\n  const sampler = new Sampler(\r\n    {\r\n      C3: bonecrack,\r\n      D3: wind,\r\n      E3: fireworks,\r\n      F3: footsteps,\r\n    },\r\n    {\r\n      onload: () => {\r\n        sampler.triggerAttack(\"C3\");\r\n      },\r\n    }\r\n  );\r\n\r\n  const reverb = new Reverb({ decay: 4 });\r\n\r\n  useEffect(() => {\r\n    if (!mounted) {\r\n      sampler.connect(reverb);\r\n      synthRef.current = sampler;\r\n      reverb.connect(Master);\r\n      setMounted(true);\r\n    }\r\n    if (note) {\r\n      // synthRef.current.triggerAttack(note, 0, velocity);\r\n    } else {\r\n      // synthRef.current.triggerRelease();\r\n    }\r\n  });\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Input\r\n        // ref={synthRef}\r\n        onMouseDown={(event) => {\r\n          synthRef.current.triggerAttack(\"C3\");\r\n          // setMouseDown(true);\r\n          const x =\r\n            (event.clientX - event.target.getBoundingClientRect().left) /\r\n            event.target.offsetWidth;\r\n          const y =\r\n            1 -\r\n            (event.clientY - event.target.getBoundingClientRect().top) /\r\n              event.target.offsetHeight;\r\n          console.log(y);\r\n          // client.publish(\r\n          //   \"redux\",\r\n          //   JSON.stringify(\r\n          //     triggerAttack(scale[Math.floor(x * scale.length)], y)\r\n          //   )\r\n          // );\r\n        }}\r\n        onMouseMove={(event) => {\r\n          if (mouseDown) {\r\n            const x =\r\n              (event.clientX - event.target.getBoundingClientRect().left) /\r\n              event.target.offsetWidth;\r\n            const y =\r\n              1 -\r\n              (event.clientY - event.target.getBoundingClientRect().top) /\r\n                event.target.offsetHeight;\r\n            client.publish(\r\n              \"redux\",\r\n              JSON.stringify(\r\n                triggerAttack(scale[Math.floor(x * scale.length)], y)\r\n              )\r\n            );\r\n          }\r\n          // synthRef.current.triggerAttack(note);\r\n          // console.log(\"mouseDown\", synthA);\r\n        }}\r\n        onMouseUp={(event) => {\r\n          setMouseDown(false);\r\n          client.publish(\"redux\", JSON.stringify(triggerRelease()));\r\n        }}\r\n      ></Input>\r\n    </Wrapper>\r\n  );\r\n};\r\n","const types = {\r\n  SETTEMPERATURE: \"SETTEMPERATURE\",\r\n  SETCURRENT: \"SETCURRENT\",\r\n  SETPROGRAM: \"SETPROGRAM\",\r\n};\r\n\r\nconst defaultState = {};\r\n\r\nexport default (state = defaultState, action) => {\r\n  switch (action.type) {\r\n    case types.SETTEMPERATURE: {\r\n      return {\r\n        ...state,\r\n        temperature: action.payload.value,\r\n      };\r\n    }\r\n    case types.SETCURRENT: {\r\n      return {\r\n        ...state,\r\n        current: action.payload.value,\r\n      };\r\n    }\r\n    case types.SETPROGRAM: {\r\n      return {\r\n        ...state,\r\n        program: action.payload.value,\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const setTemperature = (value) => {\r\n  return {\r\n    type: types.SETTEMPERATURE,\r\n    payload: {\r\n      value,\r\n    },\r\n  };\r\n};\r\nexport const setCurrent = (value) => {\r\n  return {\r\n    type: types.SETCURRENT,\r\n    payload: {\r\n      value,\r\n    },\r\n  };\r\n};\r\nexport const setProgram = (value) => {\r\n  return {\r\n    type: types.SETPROGRAM,\r\n    payload: {\r\n      value,\r\n    },\r\n  };\r\n};\r\nexport { types };\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport system from \"./system\";\r\nimport band from \"./band\";\r\n\r\nconst appReducer = combineReducers({\r\n  system,\r\n  band,\r\n});\r\n\r\nexport default (state, action) => {\r\n  if (action.type === \"RESET\") {\r\n    return appReducer(undefined, action);\r\n  } else if (action.type === \"SETSTATE\") {\r\n    return appReducer(action.payload, {\r\n      type: \"IGNORE\",\r\n    });\r\n  } else {\r\n    return appReducer(state, action);\r\n  }\r\n};\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport { createEpicMiddleware } from \"redux-observable\";\r\n\r\nimport rootReducer from \"./reducers/rootReducer\";\r\n// import rootEpic from './epics/rootEpic'\r\n\r\n// const epicMiddleware = createEpicMiddleware()\r\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeEnhancer(\r\n    applyMiddleware()\r\n    // epicMiddleware\r\n  )\r\n);\r\n\r\n// epicMiddleware.run(rootEpic);\r\n// store.subscribe(() => console.log(store.getState()))\r\nstore.dispatch({\r\n  type: \"INIT\"\r\n});\r\n\r\nexport default store;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Juno from \"./instruments/Juno\";\r\nimport Rhodes from \"./instruments/Rhodes\";\r\nimport Sampler from \"./instruments/Sampler\";\r\n\r\nimport store from \"../store\";\r\nimport client from \"../mqtt\";\r\nexport default () => {\r\n  const { id } = useParams();\r\n  const [patched, setPatched] = useState(false);\r\n  useEffect(() => {\r\n    if (id && !patched) {\r\n      // client.on(\"connect\", function () {\r\n      client.subscribe(`vjam/${id}`, function (err) {\r\n        if (!err) {\r\n          console.log(\"subscribed\");\r\n        }\r\n      });\r\n      // });\r\n\r\n      client.on(\"message\", function (topic, message) {\r\n        if (topic === `vjam/${id}`) {\r\n          let action;\r\n          try {\r\n            action = JSON.parse(message.toString());\r\n            store.dispatch(action);\r\n          } catch (e) {}\r\n        }\r\n      });\r\n\r\n      setPatched(true);\r\n    }\r\n  });\r\n  return (\r\n    <>\r\n      <Juno prefix={`vjam/${id}`}></Juno>\r\n      <Rhodes prefix={`vjam/${id}`}></Rhodes>\r\n      {/* <Sampler prefix={`vjam/${id}`}></Sampler> */}\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Provider } from \"react-redux\";\r\n// import \"./App.css\";\r\nimport { HashRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\n\r\nimport Home from \"./components/Home\";\r\nimport Lobby from \"./components/Lobby\";\r\nimport Room from \"./components/Room\";\r\n\r\nimport store from \"./store\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <div className=\"App\">\r\n        <Router>\r\n          <Switch>\r\n            <Route path=\"/rooms/:id\">\r\n              <Room />\r\n            </Route>\r\n            <Route path=\"/\">\r\n              <Home />\r\n            </Route>\r\n          </Switch>\r\n        </Router>\r\n      </div>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}