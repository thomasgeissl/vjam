{"version":3,"sources":["assets/samples/bonecrack.wav","assets/samples/footsteps.wav","assets/samples/windandchimes.wav","assets/samples/fireworks.wav","assets/samples/Roland-GR-1-Steel-Drum-C4.wav","assets/samples/Kawai-K5000W-Cello-C2.wav","components/Home.js","mqtt.js","store/reducers/band.js","components/2DPad.js","components/instruments/Wrapper.js","components/instruments/Juno.js","components/instruments/Rhodes.js","components/instruments/MPC.js","components/instruments/Sampler.js","store/reducers/system.js","components/UserList.js","store/reducers/chat.js","store/reducers/rootReducer.js","store/index.js","components/Chat.js","components/InstrumentChooser.js","components/Room.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Container","styled","div","Intro","section","RoomChooser","Door","useState","length","result","characters","charactersLength","i","charAt","Math","floor","random","generateId","room","setRoom","history","useHistory","TextField","value","onChange","event","target","Button","onClick","Tone","context","state","resume","push","client","mqtt","connect","types","instruments","JUNO","RHODES","MPC","STEELDRUM","defaultState","user","note","velocity","getNote","type","band","getVelocity","getUser","triggerAttack","instrument","payload","scale","active","prefix","mouseDown","setMouseDown","onMouseDown","x","clientX","getBoundingClientRect","left","offsetWidth","y","clientY","top","offsetHeight","n","publish","JSON","stringify","onMouseMove","onMouseUp","User","children","inputPad","name","useSelector","system","inst","Grid","item","xs","sm","patched","setPatched","setInstrument","useEffect","pad","Synth","oscillator","envelope","attack","decay","sustain","release","reverb","Freeverb","pingPongDelay","PingPongDelay","delayTime","feedback","wet","Master","triggerRelease","Wrapper","frequency","harmonicity","modulationIndex","resonance","octaves","Sampler","C3","F3","C4","F4","volume","samples","users","ul","map","index","key","messages","appReducer","combineReducers","action","includes","newState","Object","keys","forEach","chat","unshift","message","splice","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","undefined","applyMiddleware","dispatch","History","text","setText","fullWidth","sender","addMessage","choosenInstrument","container","FormControl","InputLabel","Select","setUser","MenuItem","celloSamples","steeldrum_C4","id","useParams","requestedName","setRequestedName","useDispatch","subscribe","err","console","log","on","topic","parse","toString","e","options","clientId","getState","data","onKeyPress","setName","UserList","Chat","InstrumentChooser","spacing","Juno","Rhodes","App","path","Room","Home","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.f9002528.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bonecrack.c37d9ccf.wav\";","module.exports = __webpack_public_path__ + \"static/media/footsteps.3497fc94.wav\";","module.exports = __webpack_public_path__ + \"static/media/windandchimes.4a6e1b51.wav\";","module.exports = __webpack_public_path__ + \"static/media/fireworks.23af77c2.wav\";","module.exports = __webpack_public_path__ + \"static/media/Roland-GR-1-Steel-Drum-C4.777ed87c.wav\";","module.exports = __webpack_public_path__ + \"static/media/Kawai-K5000W-Cello-C2.cfbbcfae.wav\";","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Tone from \"tone\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  max-width: 768px;\n  margin: auto;\n  margin-top: 100px;\n`;\nconst Intro = styled.section``;\nconst RoomChooser = styled.section`\n  p {\n    margin-top: 24px;\n    margin-bottom: 24px;\n  }\n`;\nconst Door = styled.div`\n  margin-top: 92px;\n  text-align: center;\n`;\nconst generateId = (length) => {\n  var result = \"\";\n  var characters = \"abcdefghijklmnopqrstuvwxyz0123456789\";\n  var charactersLength = characters.length;\n  for (var i = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n};\nexport default () => {\n  const [room, setRoom] = useState(generateId(4));\n  const history = useHistory();\n  return (\n    <Container>\n      <Intro>\n        Welcome to vjam,<br></br>a virtual jam session for everyone.\n      </Intro>\n      <RoomChooser>\n        <p>\n          Please enter a valid room id provided by your jam session partners.\n          You can also open a new one by using any random id, which is hopefully\n          not yet taken - good luck.\n        </p>\n        <Door>\n          <TextField\n            value={room}\n            onChange={(event) => setRoom(event.target.value)}\n          ></TextField>\n          <Button\n            onClick={() => {\n              if (Tone.context.state !== \"running\") {\n                Tone.context.resume();\n              }\n              history.push(`rooms/${room}`);\n            }}\n          >\n            enter\n          </Button>\n        </Door>\n      </RoomChooser>\n    </Container>\n  );\n};\n","import mqtt from \"mqtt\";\n// const client = mqtt.connect(\"ws://localhost:9001\");\nconst client = mqtt.connect(\"wss://try:try@broker.shiftr.io\");\nexport default client;\n","const types = {\n  TRIGGERATTACK: \"TRIGGERATTACK\",\n  TRIGGERRELEASE: \"TRIGGERRELEASE\",\n  SETUSER: \"SETUSER\",\n};\nconst instruments = {\n  JUNO: \"JUNO\",\n  RHODES: \"RHODES\",\n  MPC: \"MPC\",\n  STEELDRUM: \"STEELDRUM\",\n};\n\nconst defaultState = {\n  instruments: {\n    JUNO: { user: \"\", note: null, velocity: 0 },\n    RHODES: { user: \"\", note: null, velocity: 0 },\n    MPC: { user: \"\", note: null, velocity: 0 },\n    STEELDRUM: { user: \"\", note: null, velocity: 0 },\n  },\n};\n\nexport default (state = defaultState, action) => {\n  switch (action.type) {\n    case types.TRIGGERATTACK: {\n      let newState = { ...state };\n      newState.instruments[action.payload.instrument].note =\n        action.payload.note;\n      newState.instruments[action.payload.instrument].velocity =\n        action.payload.velocity;\n      return { ...newState };\n    }\n    case types.TRIGGERRELEASE: {\n      let newState = { ...state };\n      newState.instruments[action.payload.instrument].note = null;\n      newState.instruments[action.payload.instrument].velocity = 0;\n      return { ...newState };\n    }\n    case types.SETUSER: {\n      let newState = { ...state };\n      Object.keys(newState.instruments).forEach((key) => {\n        if (newState.instruments[key].user === action.payload.user) {\n          newState.instruments[key].user = \"\";\n        }\n      });\n      if (action.payload.instrument !== \"NONE\") {\n        newState.instruments[action.payload.instrument].user =\n          action.payload.user;\n      }\n\n      return { ...newState };\n    }\n    default:\n      return state;\n  }\n};\n\nexport const getChoosenInstrument = (user) => {\n  return (state) => {\n    let instrument = \"NONE\";\n    Object.keys(state.band.instruments).forEach((key) => {\n      if (state.band.instruments[key].user === user) {\n        instrument = key;\n      }\n    });\n    return instrument;\n  };\n};\nexport const getNote = (type) => {\n  return (state) => {\n    return state.band.instruments[type].note;\n  };\n};\nexport const getVelocity = (type) => {\n  return (state) => {\n    return state.band.instruments[type].velocity;\n  };\n};\nexport const getUser = (type) => {\n  return (state) => {\n    return state.band.instruments[type].user;\n  };\n};\nexport const triggerAttack = (instrument, note, velocity) => {\n  return {\n    type: types.TRIGGERATTACK,\n    payload: {\n      instrument,\n      note,\n      velocity,\n    },\n  };\n};\nexport const triggerRelease = (instrument) => {\n  return {\n    type: types.TRIGGERRELEASE,\n    payload: {\n      instrument,\n    },\n  };\n};\nexport const setUser = (instrument, user) => {\n  return {\n    type: types.SETUSER,\n    payload: {\n      instrument,\n      user,\n    },\n  };\n};\nexport { types, instruments };\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport client from \"../mqtt\";\n\nimport {\n  instruments,\n  triggerAttack,\n  triggerRelease,\n  getNote,\n  getVelocity,\n  getUser,\n} from \"../store/reducers/band\";\n\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  width: 100%;\n  height: 100%;\n  background-color: lightskyblue;\n`;\n\nconst scale = [\n  \"C3\",\n  \"D3\",\n  \"E3\",\n  \"F3\",\n  \"G3\",\n  \"A3\",\n  \"B3\",\n  \"C4\",\n  \"D4\",\n  \"E4\",\n  \"F4\",\n  \"G4\",\n  \"A4\",\n  \"B4\",\n];\n\nexport default ({ active, type, prefix }) => {\n  const [mouseDown, setMouseDown] = useState(false);\n  return (\n    <Container\n      onMouseDown={(event) => {\n        if (!active) return;\n        setMouseDown(true);\n        const x =\n          (event.clientX - event.target.getBoundingClientRect().left) /\n          event.target.offsetWidth;\n        const y =\n          1 -\n          (event.clientY - event.target.getBoundingClientRect().top) /\n            event.target.offsetHeight;\n\n        const n = scale[Math.floor(x * scale.length)];\n        client.publish(\n          prefix,\n          JSON.stringify(triggerAttack(type, n, y / 2 + 0.5))\n        );\n      }}\n      onMouseMove={(event) => {\n        if (!active) return;\n        if (mouseDown) {\n          const x =\n            (event.clientX - event.target.getBoundingClientRect().left) /\n            event.target.offsetWidth;\n          const y =\n            1 -\n            (event.clientY - event.target.getBoundingClientRect().top) /\n              event.target.offsetHeight;\n          client.publish(\n            prefix,\n            JSON.stringify(\n              triggerAttack(\n                type,\n                scale[Math.floor(x * scale.length)],\n                y / 2 + 0.5\n              )\n            )\n          );\n        }\n      }}\n      onMouseUp={(event) => {\n        if (!active) return;\n        setMouseDown(false);\n        client.publish(prefix, JSON.stringify(triggerRelease(type)));\n      }}\n    ></Container>\n  );\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { useSelector } from \"react-redux\";\nimport InputPad from \"../2DPad\";\n\nconst Container = styled.div`\n  height: 200px;\n  width: 100%;\n  ${({ active }) =>\n    active &&\n    `\n    border: solid darkgreen 3px;\n  `}\n`;\nconst User = styled.div`\n  width: 100%;\n  background-color: lightyellow;\n`;\nexport default ({ type, user, children, inputPad, prefix }) => {\n  const name = useSelector((state) => state.system.name);\n  const instruments = useSelector((state) => state.band.instruments);\n  const inst = instruments[type];\n  return (\n    <Grid item xs={12} sm={3}>\n      <User>\n        {type}: {user}\n      </User>\n      <Container active={name == inst.user}>\n        {inputPad && (\n          <InputPad\n            type={type}\n            active={user === name}\n            prefix={prefix}\n          ></InputPad>\n        )}\n        {children}\n      </Container>\n    </Grid>\n  );\n};\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { Synth, Freeverb, PingPongDelay, PolySynth, Master } from \"tone\";\nimport Wrapper from \"./Wrapper\";\nimport { getNote, getVelocity, getUser } from \"../../store/reducers/band\";\n\nexport default ({ type, prefix }) => {\n  const [patched, setPatched] = useState(false);\n  const [instrument, setInstrument] = useState(null);\n  const note = useSelector(getNote(type));\n  const velocity = useSelector(getVelocity(type));\n  const user = useSelector(getUser(type));\n\n  useEffect(() => {\n    if (!patched) {\n      const pad = new Synth({\n        oscillator: {\n          type: \"sine\",\n        },\n        envelope: {\n          attack: 0.05,\n          decay: 0.1,\n          sustain: 0.3,\n          release: 1,\n        },\n      });\n      const reverb = new Freeverb(0.4, 1000);\n      const pingPongDelay = new PingPongDelay({\n        delayTime: \"8n\",\n        feedback: 0.4,\n        wet: 0.5,\n      });\n      pad.connect(Master);\n      pingPongDelay.connect(reverb);\n      reverb.connect(Master);\n      setInstrument(pad);\n      setPatched(true);\n    }\n    if (instrument) {\n      if (note) {\n        instrument.triggerAttack(note, 0, velocity);\n      } else {\n        instrument.triggerRelease();\n      }\n    }\n  });\n\n  return (\n    <Wrapper type={type} user={user} inputPad={true} prefix={prefix}></Wrapper>\n  );\n};\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { Synth, Freeverb, PingPongDelay, MetalSynth, Master } from \"tone\";\nimport Wrapper from \"./Wrapper\";\n\nimport { getNote, getVelocity, getUser } from \"../../store/reducers/band\";\n\nexport default ({ type, prefix }) => {\n  const [patched, setPatched] = useState(false);\n  const [instrument, setInstrument] = useState(null);\n  const [mouseDown, setMouseDown] = useState(false);\n  const note = useSelector(getNote(type));\n  const velocity = useSelector(getVelocity(type));\n  const user = useSelector(getUser(type));\n  const name = useSelector((state) => state.system.name);\n  const isActiveUser = () => {\n    return user === name;\n  };\n\n  useEffect(() => {\n    if (!patched) {\n      const inst = new Synth({\n        frequency: 200,\n        envelope: {\n          attack: 0.001,\n          decay: 1.4,\n          release: 0.2,\n        },\n        harmonicity: 5.1,\n        modulationIndex: 32,\n        resonance: 4000,\n        octaves: 1.5,\n      });\n      const reverb = new Freeverb(0.4, 1000);\n      const pingPongDelay = new PingPongDelay({\n        delayTime: \"8n\",\n        feedback: 0.4,\n        wet: 0.5,\n      });\n      inst.connect(Master);\n      pingPongDelay.connect(reverb);\n      reverb.connect(Master);\n      setInstrument(inst);\n      setPatched(true);\n    }\n    if (instrument) {\n      if (note) {\n        instrument.triggerAttack(note, 0, velocity);\n      } else {\n        instrument.triggerRelease();\n      }\n    }\n  });\n\n  return (\n    <Wrapper type={type} user={user} inputPad={true} prefix={prefix}></Wrapper>\n  );\n};\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport {\n  Synth,\n  Freeverb,\n  PingPongDelay,\n  PolySynth,\n  Master,\n  Sampler,\n} from \"tone\";\nimport Wrapper from \"./Wrapper\";\n\nimport C3 from \"../../assets/samples/bonecrack.wav\";\nimport F3 from \"../../assets/samples/footsteps.wav\";\nimport C4 from \"../../assets/samples/windandchimes.wav\";\nimport F4 from \"../../assets/samples/fireworks.wav\";\n\nimport {\n  triggerAttack,\n  triggerRelease,\n  getNote,\n  getVelocity,\n  getUser,\n} from \"../../store/reducers/band\";\n\nexport default ({ type, prefix }) => {\n  const [patched, setPatched] = useState(false);\n  const [instrument, setInstrument] = useState(null);\n  const [mouseDown, setMouseDown] = useState(false);\n  const note = useSelector(getNote(type));\n  const velocity = useSelector(getVelocity(type));\n  const user = useSelector(getUser(type));\n\n  useEffect(() => {\n    if (!patched) {\n      const inst = new Sampler({\n        C3,\n        F3,\n        C4,\n        F4,\n      });\n      inst.volume.value = -6;\n      const reverb = new Freeverb(0.6, 5000);\n      const pingPongDelay = new PingPongDelay({\n        delayTime: \"32n\",\n        feedback: 0.7,\n        wet: 0.25,\n      });\n      inst.connect(pingPongDelay);\n      pingPongDelay.connect(reverb);\n      reverb.connect(Master);\n      setInstrument(inst);\n      setPatched(true);\n    }\n    if (instrument) {\n      if (note) {\n        // TODO: check why this is not working\n        // instrument.triggerAttack(note, 0, velocity);\n        instrument.triggerAttack(note);\n      } else {\n        instrument.triggerRelease();\n      }\n    }\n  });\n\n  return (\n    <Wrapper type={type} user={user} inputPad={true} prefix={prefix}></Wrapper>\n  );\n};\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport {\n  Synth,\n  Freeverb,\n  PingPongDelay,\n  PolySynth,\n  Master,\n  Sampler,\n} from \"tone\";\nimport Wrapper from \"./Wrapper\";\n\nimport { getNote, getVelocity, getUser } from \"../../store/reducers/band\";\n\nexport default ({ prefix, type, samples }) => {\n  const [patched, setPatched] = useState(false);\n  const [instrument, setInstrument] = useState(null);\n  const note = useSelector(getNote(type));\n  const velocity = useSelector(getVelocity(type));\n  const user = useSelector(getUser(type));\n  const name = useSelector((state) => state.system.name);\n\n  useEffect(() => {\n    if (!patched) {\n      const inst = new Sampler(samples);\n      inst.volume.value = -6;\n      const reverb = new Freeverb(0.6, 5000);\n      const pingPongDelay = new PingPongDelay({\n        delayTime: \"32n\",\n        feedback: 0.7,\n        wet: 0.25,\n      });\n      inst.volume.value = -24;\n      inst.connect(pingPongDelay);\n      pingPongDelay.connect(reverb);\n      reverb.connect(Master);\n      setInstrument(inst);\n      setPatched(true);\n    }\n    if (instrument) {\n      if (note) {\n        // TODO: check why this is not working\n        // instrument.triggerAttack(note, 0, velocity);\n        instrument.triggerAttack(note);\n      } else {\n        instrument.triggerRelease();\n      }\n    }\n  });\n\n  return (\n    <Wrapper type={type} user={user} inputPad={true} prefix={prefix}></Wrapper>\n  );\n};\n","const types = {\n  ADDUSER: \"ADDUSER\",\n  SETUSERS: \"SETUSERS\",\n  SETNAME: \"SETNAME\",\n};\n\nconst defaultState = {\n  name: \"\", //current user name\n  users: [], //all users\n};\n\nexport default (state = defaultState, action) => {\n  switch (action.type) {\n    case types.SETUSERS: {\n      return {\n        ...state,\n        users: action.payload.value,\n      };\n    }\n    case types.ADDUSER: {\n      let users = [...state.users];\n      if (!users.includes(action.payload.value)) {\n        users.push(action.payload.value);\n      }\n      return {\n        ...state,\n        users,\n      };\n    }\n    case types.SETNAME: {\n      if (!state.users.includes(action.payload.value)) {\n        return {\n          ...state,\n          name: action.payload.value,\n        };\n      }\n    }\n    default:\n      return state;\n  }\n};\n\nexport const setUsers = (value) => {\n  return {\n    type: types.SETUSERS,\n    payload: {\n      value,\n    },\n  };\n};\nexport const addUser = (value) => {\n  return {\n    type: types.ADDUSER,\n    payload: {\n      value,\n    },\n  };\n};\nexport const setName = (value) => {\n  return {\n    type: types.SETNAME,\n    payload: {\n      value,\n    },\n  };\n};\nexport { types };\n","import React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\n\nconst Container = styled.ul`\n  background-color: lightpink;\n  padding: 25px;\n  list-style-type: none;\n  li {\n    display: inline-block;\n    margin-right: 15px;\n  }\n`;\nexport default () => {\n  const users = useSelector((state) => state.system.users);\n  const name = useSelector((state) => state.system.name);\n\n  return (\n    <Container>\n      {users.map((user, index) => {\n        return (\n          <li key={index}>\n            {user !== name && <span>{user}</span>}\n            {user === name && <b>{user}</b>}\n          </li>\n        );\n      })}\n    </Container>\n  );\n};\n","const types = {\n  ADDMESSAGE: \"ADDMESSAGE\",\n};\n\nconst defaultState = {\n  messages: [],\n};\n\nexport default (state = defaultState, action) => {\n  switch (action.type) {\n    case types.ADDMESSAGE: {\n      let messages = [...state.messages];\n      messages.unshift(action.payload.message);\n      messages = messages.splice(0, 100);\n      return {\n        ...state,\n        messages,\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport const addMessage = (sender, text) => {\n  return {\n    type: types.ADDMESSAGE,\n    payload: {\n      message: {\n        sender,\n        text,\n      },\n    },\n  };\n};\nexport { types };\n","import { combineReducers } from \"redux\";\n\nimport system from \"./system\";\nimport band from \"./band\";\nimport chat from \"./chat\";\n\nconst appReducer = combineReducers({\n  system,\n  band,\n  chat,\n});\n\nexport default (state, action) => {\n  if (action.type === \"RESET\") {\n    return appReducer(undefined, action);\n  } else if (action.type === \"SETSTATE\") {\n    return appReducer(action.payload, {\n      type: \"IGNORE\",\n    });\n  } else {\n    return appReducer(state, action);\n  }\n};\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport { createEpicMiddleware } from \"redux-observable\";\n\nimport rootReducer from \"./reducers/rootReducer\";\n// import rootEpic from './epics/rootEpic'\n\n// const epicMiddleware = createEpicMiddleware()\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancer(\n    applyMiddleware()\n    // epicMiddleware\n  )\n);\n\n// epicMiddleware.run(rootEpic);\n// store.subscribe(() => console.log(store.getState()))\nstore.dispatch({\n  type: \"INIT\"\n});\n\nexport default store;\n","import React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport styled from \"styled-components\";\nimport client from \"../mqtt\";\n\nimport { addMessage } from \"../store/reducers/chat\";\nimport store from \"../store\";\n\nconst Container = styled.div`\n  background-color: lightcoral;\n  padding: 25px;\n`;\nconst History = styled.ul`\n  height: 100px;\n  overflow-y: scroll;\n`;\nconst Intro = styled.section``;\nexport default ({ prefix }) => {\n  const [text, setText] = useState(\"\");\n  const messages = useSelector((state) => state.chat.messages);\n  const name = useSelector((state) => state.system.name);\n\n  return (\n    <Container>\n      <TextField\n        fullWidth\n        value={text}\n        fullWidth\n        placeholder={\"something nice you wanna say to your friends\"}\n        onChange={(event) => setText(event.target.value)}\n        onKeyPress={(event) => {\n          if (event.key === \"Enter\") {\n            client.publish(prefix, JSON.stringify(addMessage(name, text)));\n            setText(\"\");\n          }\n        }}\n      ></TextField>\n      {/* <Button\n        onClick={() => {\n          client.publish(\n            prefix,\n            JSON.stringify(addMessage(\"TODO: name\", text))\n          );\n        }}\n      >\n        send\n      </Button> */}\n      <History>\n        {messages.map((message, index) => {\n          return (\n            <li key={index}>\n              {message.sender} > {message.text}\n            </li>\n          );\n        })}\n      </History>\n    </Container>\n  );\n};\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Grid from \"@material-ui/core/Grid\";\n\nimport client from \"../mqtt\";\nimport { setUser, getChoosenInstrument } from \"../store/reducers/band\";\n\nimport { instruments as types } from \"../store/reducers/band\";\n\nconst Container = styled.div`\n  width: 100%;\n  margin-top: 25px;\n  margin-bottom: 25px;\n`;\n\nexport default ({ prefix }) => {\n  const name = useSelector((state) => state.system.name);\n  const instruments = useSelector((state) => state.band.instruments);\n  const choosenInstrument = useSelector(getChoosenInstrument(name));\n  return (\n    <Container>\n      <Grid container>\n        <Grid item xs={4}>\n          <FormControl fullWidth>\n            <InputLabel>Pick an instrument</InputLabel>\n            <Select\n              value={choosenInstrument}\n              onChange={(event) => {\n                let taken = false;\n                Object.keys(instruments).forEach((key) => {\n                  if (instruments[key].user !== \"\") {\n                    taken = true;\n                  }\n                });\n                // if (event.target.value !== \"NONE\") {\n                client.publish(\n                  prefix,\n                  JSON.stringify(setUser(event.target.value, name))\n                );\n                // }\n              }}\n              fullWidth\n            >\n              <MenuItem value={\"NONE\"}>none</MenuItem>;\n              {Object.keys(types).map((key, index) => {\n                return (\n                  <MenuItem value={types[key]} key={index}>\n                    {types[key]}\n                  </MenuItem>\n                );\n              })}\n            </Select>\n          </FormControl>\n        </Grid>\n      </Grid>\n    </Container>\n  );\n};\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport Juno from \"./instruments/Juno\";\nimport Rhodes from \"./instruments/Rhodes\";\nimport MPC from \"./instruments/MPC\";\nimport Sampler from \"./instruments/Sampler\";\n\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\n\nimport { setUsers, addUser, setName } from \"../store/reducers/system\";\n\nimport UserList from \"./UserList\";\nimport Chat from \"./Chat\";\nimport InstrumentChooser from \"./InstrumentChooser\";\n\nimport store from \"../store\";\nimport { instruments } from \"../store/reducers/band\";\nimport client from \"../mqtt\";\n\nimport cello_C2 from \"../assets/samples/Kawai-K5000W-Cello-C2.wav\";\nimport steeldrum_C4 from \"../assets/samples/Roland-GR-1-Steel-Drum-C4.wav\";\nconst celloSamples = {\n  C4: steeldrum_C4,\n};\n\nconst Intro = styled.div`\n  margin-top: 128px;\n`;\nexport default () => {\n  const { id } = useParams();\n  const [patched, setPatched] = useState(false);\n  const [requestedName, setRequestedName] = useState(\"\");\n  const name = useSelector((state) => state.system.name);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (id && !patched) {\n      client.subscribe(`vjam/${id}`, function (err) {\n        if (!err) {\n          console.log(`subscribed to vjam/${id}`);\n        }\n      });\n      client.subscribe(`vjam/${id}/users/#`, function (err) {\n        if (!err) {\n          console.log(`subscribed to vjam/${id}/users/#`);\n        }\n      });\n\n      client.on(\"message\", function (topic, message) {\n        if (topic === `vjam/${id}`) {\n          let action;\n          try {\n            action = JSON.parse(message.toString());\n            store.dispatch(action);\n          } catch (e) {}\n        }\n        if (topic === `vjam/${id}/users/get`) {\n          const data = JSON.parse(message.toString());\n          if (data.id !== client.options.clientId) {\n            client.publish(\n              `vjam/${id}/users/set`,\n              JSON.stringify(store.getState().system.users)\n            );\n          }\n        }\n        if (topic === `vjam/${id}/users/set`) {\n          const data = JSON.parse(message.toString());\n          store.dispatch(setUsers(data));\n        }\n      });\n\n      setPatched(true);\n      client.publish(\n        `vjam/${id}/users/get`,\n        JSON.stringify({ id: client.options.clientId })\n      );\n    }\n  });\n  return (\n    <>\n      {name === \"\" && (\n        <Intro>\n          <Grid container>\n            <Grid item xs={2} sm={3}></Grid>\n            <Grid item xs={8} sm={6}>\n              Please let the others know your name. If it is not yet taken, then\n              you will automatically enter the jam session. Submit by pressing\n              return.\n            </Grid>\n            <Grid item xs={2} sm={3}></Grid>\n\n            <Grid item xs={2} sm={3}></Grid>\n            <Grid item xs={8} sm={6}>\n              <TextField\n                fullWidth\n                value={requestedName}\n                onChange={(event) => {\n                  setRequestedName(event.target.value);\n                }}\n                onKeyPress={(event) => {\n                  if (event.key === \"Enter\") {\n                    client.publish(\n                      `vjam/${id}`,\n                      JSON.stringify(addUser(requestedName))\n                    );\n                    dispatch(setName(requestedName));\n                  }\n                }}\n              ></TextField>\n            </Grid>\n          </Grid>\n        </Intro>\n      )}\n\n      {name !== \"\" && (\n        <>\n          <Grid container>\n            <Grid item xs={12}>\n              <UserList></UserList>\n            </Grid>\n            <Grid item xs={12}>\n              <Chat prefix={`vjam/${id}`}></Chat>\n            </Grid>\n          </Grid>\n\n          <h2>Instruments</h2>\n          <p>\n            Instrumentes are controlled via the 2d pad, where the x axis is\n            mapped to the pitch and the y axis to the velocity. More instruments\n            and controllable effect parameters, as well as better interactions,\n            will hopefully follow soon.\n          </p>\n          <InstrumentChooser prefix={`vjam/${id}`}></InstrumentChooser>\n          <Grid container spacing={3}>\n            <Juno type={instruments.JUNO} prefix={`vjam/${id}`}></Juno>\n            <Rhodes type={instruments.RHODES} prefix={`vjam/${id}`}></Rhodes>\n            <MPC type={instruments.MPC} prefix={`vjam/${id}`}></MPC>\n            <Sampler\n              type={instruments.STEELDRUM}\n              samples={celloSamples}\n              prefix={`vjam/${id}`}\n            ></Sampler>\n          </Grid>\n        </>\n      )}\n    </>\n  );\n};\n","import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport { HashRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport Home from \"./components/Home\";\nimport Room from \"./components/Room\";\n\nimport store from \"./store\";\n\nconst Container = styled.div`\n  margin-left: 15px;\n  margin-right: 15px;\n`;\n\nfunction App() {\n  return (\n    <Container>\n      <Provider store={store}>\n        <Router>\n          <Switch>\n            <Route path=\"/rooms/:id\">\n              <Room />\n            </Route>\n            <Route path=\"/\">\n              <Home />\n            </Route>\n          </Switch>\n        </Router>\n      </Provider>\n    </Container>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}